define(['dart_sdk', 'packages/intl/number_symbols'], function(dart_sdk, number_symbols) {
  'use strict';
  const core = dart_sdk.core;
  const _js_helper = dart_sdk._js_helper;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const number_symbols$ = number_symbols.number_symbols;
  const _root = Object.create(null);
  const number_symbols_data = Object.create(_root);
  let IdentityMapOfString$NumberSymbols = () => (IdentityMapOfString$NumberSymbols = dart.constFn(_js_helper.IdentityMap$(core.String, number_symbols$.NumberSymbols)))();
  let IdentityMapOfString$CompactNumberSymbols = () => (IdentityMapOfString$CompactNumberSymbols = dart.constFn(_js_helper.IdentityMap$(core.String, number_symbols$.CompactNumberSymbols)))();
  let IdentityMapOfString$int = () => (IdentityMapOfString$int = dart.constFn(_js_helper.IdentityMap$(core.String, core.int)))();
  dart.defineLazy(number_symbols_data, {
    /*number_symbols_data.numberFormatSymbols*/get numberFormatSymbols() {
      return new (IdentityMapOfString$NumberSymbols()).from(["af", new number_symbols$.NumberSymbols.new({NAME: "af", DECIMAL_SEP: ",", GROUP_SEP: " ", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "ZAR"}), "am", new number_symbols$.NumberSymbols.new({NAME: "am", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "ETB"}), "ar", new number_symbols$.NumberSymbols.new({NAME: "ar", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "‎%‎", ZERO_DIGIT: "0", PLUS_SIGN: "‎+", MINUS_SIGN: "‎-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "ليس رقمًا", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤ #,##0.00", DEF_CURRENCY_CODE: "EGP"}), "ar_DZ", new number_symbols$.NumberSymbols.new({NAME: "ar_DZ", DECIMAL_SEP: ",", GROUP_SEP: ".", PERCENT: "‎%‎", ZERO_DIGIT: "0", PLUS_SIGN: "‎+", MINUS_SIGN: "‎-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "ليس رقمًا", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤ #,##0.00", DEF_CURRENCY_CODE: "DZD"}), "ar_EG", new number_symbols$.NumberSymbols.new({NAME: "ar_EG", DECIMAL_SEP: "٫", GROUP_SEP: "٬", PERCENT: "٪؜", ZERO_DIGIT: "٠", PLUS_SIGN: "؜+", MINUS_SIGN: "؜-", EXP_SYMBOL: "اس", PERMILL: "؉", INFINITY: "∞", NAN: "ليس رقم", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "EGP"}), "az", new number_symbols$.NumberSymbols.new({NAME: "az", DECIMAL_SEP: ",", GROUP_SEP: ".", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤ #,##0.00", DEF_CURRENCY_CODE: "AZN"}), "be", new number_symbols$.NumberSymbols.new({NAME: "be", DECIMAL_SEP: ",", GROUP_SEP: " ", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0 %", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "BYN"}), "bg", new number_symbols$.NumberSymbols.new({NAME: "bg", DECIMAL_SEP: ",", GROUP_SEP: " ", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "0.00 ¤", DEF_CURRENCY_CODE: "BGN"}), "bn", new number_symbols$.NumberSymbols.new({NAME: "bn", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "০", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "#,##,##0.00¤", DEF_CURRENCY_CODE: "BDT"}), "br", new number_symbols$.NumberSymbols.new({NAME: "br", DECIMAL_SEP: ",", GROUP_SEP: " ", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0 %", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "EUR"}), "bs", new number_symbols$.NumberSymbols.new({NAME: "bs", DECIMAL_SEP: ",", GROUP_SEP: ".", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0 %", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "BAM"}), "ca", new number_symbols$.NumberSymbols.new({NAME: "ca", DECIMAL_SEP: ",", GROUP_SEP: ".", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "EUR"}), "chr", new number_symbols$.NumberSymbols.new({NAME: "chr", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "USD"}), "cs", new number_symbols$.NumberSymbols.new({NAME: "cs", DECIMAL_SEP: ",", GROUP_SEP: " ", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0 %", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "CZK"}), "cy", new number_symbols$.NumberSymbols.new({NAME: "cy", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "GBP"}), "da", new number_symbols$.NumberSymbols.new({NAME: "da", DECIMAL_SEP: ",", GROUP_SEP: ".", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0 %", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "DKK"}), "de", new number_symbols$.NumberSymbols.new({NAME: "de", DECIMAL_SEP: ",", GROUP_SEP: ".", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0 %", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "EUR"}), "de_AT", new number_symbols$.NumberSymbols.new({NAME: "de_AT", DECIMAL_SEP: ",", GROUP_SEP: " ", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0 %", CURRENCY_PATTERN: "¤ #,##0.00", DEF_CURRENCY_CODE: "EUR"}), "de_CH", new number_symbols$.NumberSymbols.new({NAME: "de_CH", DECIMAL_SEP: ".", GROUP_SEP: "’", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤ #,##0.00;¤-#,##0.00", DEF_CURRENCY_CODE: "CHF"}), "el", new number_symbols$.NumberSymbols.new({NAME: "el", DECIMAL_SEP: ",", GROUP_SEP: ".", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "e", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "EUR"}), "en", new number_symbols$.NumberSymbols.new({NAME: "en", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "USD"}), "en_AU", new number_symbols$.NumberSymbols.new({NAME: "en_AU", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "e", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "AUD"}), "en_CA", new number_symbols$.NumberSymbols.new({NAME: "en_CA", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "e", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "CAD"}), "en_GB", new number_symbols$.NumberSymbols.new({NAME: "en_GB", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "GBP"}), "en_IE", new number_symbols$.NumberSymbols.new({NAME: "en_IE", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "EUR"}), "en_IN", new number_symbols$.NumberSymbols.new({NAME: "en_IN", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##,##0%", CURRENCY_PATTERN: "¤ #,##,##0.00", DEF_CURRENCY_CODE: "INR"}), "en_MY", new number_symbols$.NumberSymbols.new({NAME: "en_MY", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "MYR"}), "en_SG", new number_symbols$.NumberSymbols.new({NAME: "en_SG", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "SGD"}), "en_US", new number_symbols$.NumberSymbols.new({NAME: "en_US", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "USD"}), "en_ZA", new number_symbols$.NumberSymbols.new({NAME: "en_ZA", DECIMAL_SEP: ",", GROUP_SEP: " ", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "ZAR"}), "es", new number_symbols$.NumberSymbols.new({NAME: "es", DECIMAL_SEP: ",", GROUP_SEP: ".", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0 %", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "EUR"}), "es_419", new number_symbols$.NumberSymbols.new({NAME: "es_419", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0 %", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "MXN"}), "es_ES", new number_symbols$.NumberSymbols.new({NAME: "es_ES", DECIMAL_SEP: ",", GROUP_SEP: ".", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0 %", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "EUR"}), "es_MX", new number_symbols$.NumberSymbols.new({NAME: "es_MX", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0 %", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "MXN"}), "es_US", new number_symbols$.NumberSymbols.new({NAME: "es_US", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0 %", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "USD"}), "et", new number_symbols$.NumberSymbols.new({NAME: "et", DECIMAL_SEP: ",", GROUP_SEP: " ", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "−", EXP_SYMBOL: "×10^", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "EUR"}), "eu", new number_symbols$.NumberSymbols.new({NAME: "eu", DECIMAL_SEP: ",", GROUP_SEP: ".", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "−", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "% #,##0", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "EUR"}), "fa", new number_symbols$.NumberSymbols.new({NAME: "fa", DECIMAL_SEP: "٫", GROUP_SEP: "٬", PERCENT: "٪", ZERO_DIGIT: "۰", PLUS_SIGN: "‎+", MINUS_SIGN: "‎−", EXP_SYMBOL: "×۱۰^", PERMILL: "؉", INFINITY: "∞", NAN: "ناعدد", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "‎¤#,##0.00", DEF_CURRENCY_CODE: "IRR"}), "fi", new number_symbols$.NumberSymbols.new({NAME: "fi", DECIMAL_SEP: ",", GROUP_SEP: " ", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "−", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "epäluku", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0 %", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "EUR"}), "fil", new number_symbols$.NumberSymbols.new({NAME: "fil", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "PHP"}), "fr", new number_symbols$.NumberSymbols.new({NAME: "fr", DECIMAL_SEP: ",", GROUP_SEP: " ", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0 %", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "EUR"}), "fr_CA", new number_symbols$.NumberSymbols.new({NAME: "fr_CA", DECIMAL_SEP: ",", GROUP_SEP: " ", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0 %", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "CAD"}), "fr_CH", new number_symbols$.NumberSymbols.new({NAME: "fr_CH", DECIMAL_SEP: ",", GROUP_SEP: " ", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "#,##0.00 ¤;-#,##0.00 ¤", DEF_CURRENCY_CODE: "CHF"}), "ga", new number_symbols$.NumberSymbols.new({NAME: "ga", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "EUR"}), "gl", new number_symbols$.NumberSymbols.new({NAME: "gl", DECIMAL_SEP: ",", GROUP_SEP: ".", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0 %", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "EUR"}), "gsw", new number_symbols$.NumberSymbols.new({NAME: "gsw", DECIMAL_SEP: ".", GROUP_SEP: "’", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "−", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0 %", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "CHF"}), "gu", new number_symbols$.NumberSymbols.new({NAME: "gu", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##,##0.###", SCIENTIFIC_PATTERN: "[#E0]", PERCENT_PATTERN: "#,##,##0%", CURRENCY_PATTERN: "¤#,##,##0.00", DEF_CURRENCY_CODE: "INR"}), "haw", new number_symbols$.NumberSymbols.new({NAME: "haw", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "USD"}), "he", new number_symbols$.NumberSymbols.new({NAME: "he", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "‎+", MINUS_SIGN: "‎-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "‏#,##0.00 ¤;‏-#,##0.00 ¤", DEF_CURRENCY_CODE: "ILS"}), "hi", new number_symbols$.NumberSymbols.new({NAME: "hi", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##,##0.###", SCIENTIFIC_PATTERN: "[#E0]", PERCENT_PATTERN: "#,##,##0%", CURRENCY_PATTERN: "¤#,##,##0.00", DEF_CURRENCY_CODE: "INR"}), "hr", new number_symbols$.NumberSymbols.new({NAME: "hr", DECIMAL_SEP: ",", GROUP_SEP: ".", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "HRK"}), "hu", new number_symbols$.NumberSymbols.new({NAME: "hu", DECIMAL_SEP: ",", GROUP_SEP: " ", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "HUF"}), "hy", new number_symbols$.NumberSymbols.new({NAME: "hy", DECIMAL_SEP: ",", GROUP_SEP: " ", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "ՈչԹ", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "AMD"}), "id", new number_symbols$.NumberSymbols.new({NAME: "id", DECIMAL_SEP: ",", GROUP_SEP: ".", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "IDR"}), "in", new number_symbols$.NumberSymbols.new({NAME: "in", DECIMAL_SEP: ",", GROUP_SEP: ".", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "IDR"}), "is", new number_symbols$.NumberSymbols.new({NAME: "is", DECIMAL_SEP: ",", GROUP_SEP: ".", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "ISK"}), "it", new number_symbols$.NumberSymbols.new({NAME: "it", DECIMAL_SEP: ",", GROUP_SEP: ".", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "EUR"}), "it_CH", new number_symbols$.NumberSymbols.new({NAME: "it_CH", DECIMAL_SEP: ".", GROUP_SEP: "’", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤ #,##0.00;¤-#,##0.00", DEF_CURRENCY_CODE: "CHF"}), "iw", new number_symbols$.NumberSymbols.new({NAME: "iw", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "‎+", MINUS_SIGN: "‎-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "‏#,##0.00 ¤;‏-#,##0.00 ¤", DEF_CURRENCY_CODE: "ILS"}), "ja", new number_symbols$.NumberSymbols.new({NAME: "ja", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "JPY"}), "ka", new number_symbols$.NumberSymbols.new({NAME: "ka", DECIMAL_SEP: ",", GROUP_SEP: " ", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "არ არის რიცხვი", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "GEL"}), "kk", new number_symbols$.NumberSymbols.new({NAME: "kk", DECIMAL_SEP: ",", GROUP_SEP: " ", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "сан емес", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "KZT"}), "km", new number_symbols$.NumberSymbols.new({NAME: "km", DECIMAL_SEP: ",", GROUP_SEP: ".", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "#,##0.00¤", DEF_CURRENCY_CODE: "KHR"}), "kn", new number_symbols$.NumberSymbols.new({NAME: "kn", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "INR"}), "ko", new number_symbols$.NumberSymbols.new({NAME: "ko", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "KRW"}), "ky", new number_symbols$.NumberSymbols.new({NAME: "ky", DECIMAL_SEP: ",", GROUP_SEP: " ", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "сан эмес", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "KGS"}), "ln", new number_symbols$.NumberSymbols.new({NAME: "ln", DECIMAL_SEP: ",", GROUP_SEP: ".", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "CDF"}), "lo", new number_symbols$.NumberSymbols.new({NAME: "lo", DECIMAL_SEP: ",", GROUP_SEP: ".", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "ບໍ່​ແມ່ນ​ໂຕ​ເລກ", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00;¤-#,##0.00", DEF_CURRENCY_CODE: "LAK"}), "lt", new number_symbols$.NumberSymbols.new({NAME: "lt", DECIMAL_SEP: ",", GROUP_SEP: " ", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "−", EXP_SYMBOL: "×10^", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0 %", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "EUR"}), "lv", new number_symbols$.NumberSymbols.new({NAME: "lv", DECIMAL_SEP: ",", GROUP_SEP: " ", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NS", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "EUR"}), "mk", new number_symbols$.NumberSymbols.new({NAME: "mk", DECIMAL_SEP: ",", GROUP_SEP: ".", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "MKD"}), "ml", new number_symbols$.NumberSymbols.new({NAME: "ml", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "INR"}), "mn", new number_symbols$.NumberSymbols.new({NAME: "mn", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤ #,##0.00", DEF_CURRENCY_CODE: "MNT"}), "mr", new number_symbols$.NumberSymbols.new({NAME: "mr", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "०", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##,##0.###", SCIENTIFIC_PATTERN: "[#E0]", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "INR"}), "ms", new number_symbols$.NumberSymbols.new({NAME: "ms", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "MYR"}), "mt", new number_symbols$.NumberSymbols.new({NAME: "mt", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "EUR"}), "my", new number_symbols$.NumberSymbols.new({NAME: "my", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "၀", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "ဂဏန်းမဟုတ်သော", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "MMK"}), "nb", new number_symbols$.NumberSymbols.new({NAME: "nb", DECIMAL_SEP: ",", GROUP_SEP: " ", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "−", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0 %", CURRENCY_PATTERN: "¤ #,##0.00", DEF_CURRENCY_CODE: "NOK"}), "ne", new number_symbols$.NumberSymbols.new({NAME: "ne", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "०", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤ #,##0.00", DEF_CURRENCY_CODE: "NPR"}), "nl", new number_symbols$.NumberSymbols.new({NAME: "nl", DECIMAL_SEP: ",", GROUP_SEP: ".", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤ #,##0.00;¤ -#,##0.00", DEF_CURRENCY_CODE: "EUR"}), "no", new number_symbols$.NumberSymbols.new({NAME: "no", DECIMAL_SEP: ",", GROUP_SEP: " ", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "−", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0 %", CURRENCY_PATTERN: "¤ #,##0.00", DEF_CURRENCY_CODE: "NOK"}), "no_NO", new number_symbols$.NumberSymbols.new({NAME: "no_NO", DECIMAL_SEP: ",", GROUP_SEP: " ", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "−", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0 %", CURRENCY_PATTERN: "¤ #,##0.00", DEF_CURRENCY_CODE: "NOK"}), "or", new number_symbols$.NumberSymbols.new({NAME: "or", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##,##0%", CURRENCY_PATTERN: "¤ #,##,##0.00", DEF_CURRENCY_CODE: "INR"}), "pa", new number_symbols$.NumberSymbols.new({NAME: "pa", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##,##0.###", SCIENTIFIC_PATTERN: "[#E0]", PERCENT_PATTERN: "#,##,##0%", CURRENCY_PATTERN: "¤ #,##,##0.00", DEF_CURRENCY_CODE: "INR"}), "pl", new number_symbols$.NumberSymbols.new({NAME: "pl", DECIMAL_SEP: ",", GROUP_SEP: " ", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "PLN"}), "ps", new number_symbols$.NumberSymbols.new({NAME: "ps", DECIMAL_SEP: "٫", GROUP_SEP: "٬", PERCENT: "٪", ZERO_DIGIT: "۰", PLUS_SIGN: "‎+‎", MINUS_SIGN: "‎-‎", EXP_SYMBOL: "×۱۰^", PERMILL: "؉", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "AFN"}), "pt", new number_symbols$.NumberSymbols.new({NAME: "pt", DECIMAL_SEP: ",", GROUP_SEP: ".", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤ #,##0.00", DEF_CURRENCY_CODE: "BRL"}), "pt_BR", new number_symbols$.NumberSymbols.new({NAME: "pt_BR", DECIMAL_SEP: ",", GROUP_SEP: ".", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤ #,##0.00", DEF_CURRENCY_CODE: "BRL"}), "pt_PT", new number_symbols$.NumberSymbols.new({NAME: "pt_PT", DECIMAL_SEP: ",", GROUP_SEP: " ", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "EUR"}), "ro", new number_symbols$.NumberSymbols.new({NAME: "ro", DECIMAL_SEP: ",", GROUP_SEP: ".", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0 %", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "RON"}), "ru", new number_symbols$.NumberSymbols.new({NAME: "ru", DECIMAL_SEP: ",", GROUP_SEP: " ", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "не число", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0 %", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "RUB"}), "si", new number_symbols$.NumberSymbols.new({NAME: "si", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "LKR"}), "sk", new number_symbols$.NumberSymbols.new({NAME: "sk", DECIMAL_SEP: ",", GROUP_SEP: " ", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "e", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0 %", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "EUR"}), "sl", new number_symbols$.NumberSymbols.new({NAME: "sl", DECIMAL_SEP: ",", GROUP_SEP: ".", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "−", EXP_SYMBOL: "e", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0 %", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "EUR"}), "sq", new number_symbols$.NumberSymbols.new({NAME: "sq", DECIMAL_SEP: ",", GROUP_SEP: " ", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "ALL"}), "sr", new number_symbols$.NumberSymbols.new({NAME: "sr", DECIMAL_SEP: ",", GROUP_SEP: ".", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "RSD"}), "sr_Latn", new number_symbols$.NumberSymbols.new({NAME: "sr_Latn", DECIMAL_SEP: ",", GROUP_SEP: ".", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "RSD"}), "sv", new number_symbols$.NumberSymbols.new({NAME: "sv", DECIMAL_SEP: ",", GROUP_SEP: " ", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "−", EXP_SYMBOL: "×10^", PERMILL: "‰", INFINITY: "∞", NAN: "¤¤¤", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0 %", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "SEK"}), "sw", new number_symbols$.NumberSymbols.new({NAME: "sw", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "TZS"}), "ta", new number_symbols$.NumberSymbols.new({NAME: "ta", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##,##0%", CURRENCY_PATTERN: "¤ #,##,##0.00", DEF_CURRENCY_CODE: "INR"}), "te", new number_symbols$.NumberSymbols.new({NAME: "te", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##,##0.00", DEF_CURRENCY_CODE: "INR"}), "th", new number_symbols$.NumberSymbols.new({NAME: "th", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "THB"}), "tl", new number_symbols$.NumberSymbols.new({NAME: "tl", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "PHP"}), "tr", new number_symbols$.NumberSymbols.new({NAME: "tr", DECIMAL_SEP: ",", GROUP_SEP: ".", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "%#,##0", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "TRY"}), "uk", new number_symbols$.NumberSymbols.new({NAME: "uk", DECIMAL_SEP: ",", GROUP_SEP: " ", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "Е", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "UAH"}), "ur", new number_symbols$.NumberSymbols.new({NAME: "ur", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "‎+", MINUS_SIGN: "‎-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤ #,##0.00", DEF_CURRENCY_CODE: "PKR"}), "uz", new number_symbols$.NumberSymbols.new({NAME: "uz", DECIMAL_SEP: ",", GROUP_SEP: " ", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "son emas", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "UZS"}), "vi", new number_symbols$.NumberSymbols.new({NAME: "vi", DECIMAL_SEP: ",", GROUP_SEP: ".", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "#,##0.00 ¤", DEF_CURRENCY_CODE: "VND"}), "zh", new number_symbols$.NumberSymbols.new({NAME: "zh", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "CNY"}), "zh_CN", new number_symbols$.NumberSymbols.new({NAME: "zh_CN", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "CNY"}), "zh_HK", new number_symbols$.NumberSymbols.new({NAME: "zh_HK", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "非數值", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "HKD"}), "zh_TW", new number_symbols$.NumberSymbols.new({NAME: "zh_TW", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "非數值", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "TWD"}), "zu", new number_symbols$.NumberSymbols.new({NAME: "zu", DECIMAL_SEP: ".", GROUP_SEP: ",", PERCENT: "%", ZERO_DIGIT: "0", PLUS_SIGN: "+", MINUS_SIGN: "-", EXP_SYMBOL: "E", PERMILL: "‰", INFINITY: "∞", NAN: "NaN", DECIMAL_PATTERN: "#,##0.###", SCIENTIFIC_PATTERN: "#E0", PERCENT_PATTERN: "#,##0%", CURRENCY_PATTERN: "¤#,##0.00", DEF_CURRENCY_CODE: "ZAR"})]);
    },
    set numberFormatSymbols(_) {},
    /*number_symbols_data.compactNumberSymbols*/get compactNumberSymbols() {
      return new (IdentityMapOfString$CompactNumberSymbols()).from(["af", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 k", 4, "00 k", 5, "000 k", 6, "0 m", 7, "00 m", 8, "000 m", 9, "0 mjd", 10, "00 mjd", 11, "000 mjd", 12, "0 bn", 13, "00 bn", 14, "000 bn"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 duisend", 4, "00 duisend", 5, "000 duisend", 6, "0 miljoen", 7, "00 miljoen", 8, "000 miljoen", 9, "0 miljard", 10, "00 miljard", 11, "000 miljard", 12, "0 biljoen", 13, "00 biljoen", 14, "000 biljoen"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0 k", 4, "¤00 k", 5, "¤000 k", 6, "¤0 m", 7, "¤00 m", 8, "¤000 m", 9, "¤0 mjd", 10, "¤00 mjd", 11, "¤000 mjd", 12, "¤0 bn", 13, "¤00 bn", 14, "¤000 bn"])}), "am", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 ሺ", 4, "00 ሺ", 5, "000 ሺ", 6, "0 ሜትር", 7, "00 ሜትር", 8, "000ሜ", 9, "0 ቢ", 10, "00 ቢ", 11, "000 ቢ", 12, "0 ት", 13, "00 ት", 14, "000 ት"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 ሺ", 4, "00 ሺ", 5, "000 ሺ", 6, "0 ሚሊዮን", 7, "00 ሚሊዮን", 8, "000 ሚሊዮን", 9, "0 ቢሊዮን", 10, "00 ቢሊዮን", 11, "000 ቢሊዮን", 12, "0 ትሪሊዮን", 13, "00 ትሪሊዮን", 14, "000 ትሪሊዮን"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0 ሺ", 4, "¤00 ሺ", 5, "¤000 ሺ", 6, "¤0 ሜትር", 7, "¤00 ሜትር", 8, "¤000 ሜትር", 9, "¤0 ቢ", 10, "¤00 ቢ", 11, "¤000 ቢ", 12, "¤0 ት", 13, "¤00 ት", 14, "¤000 ት"])}), "ar", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 ألف", 4, "00 ألف", 5, "000 ألف", 6, "0 مليون", 7, "00 مليون", 8, "000 مليون", 9, "0 مليار", 10, "00 مليار", 11, "000 مليار", 12, "0 ترليون", 13, "00 ترليون", 14, "000 ترليون"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 ألف", 4, "00 ألف", 5, "000 ألف", 6, "0 مليون", 7, "00 مليون", 8, "000 مليون", 9, "0 مليار", 10, "00 مليار", 11, "000 مليار", 12, "0 ترليون", 13, "00 ترليون", 14, "000 ترليون"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤ 0 ألف", 4, "¤ 00 ألف", 5, "¤ 000 ألف", 6, "¤ 0 مليون", 7, "¤ 00 مليون", 8, "¤ 000 مليون", 9, "¤ 0 مليار", 10, "¤ 00 مليار", 11, "¤ 000 مليار", 12, "¤ 0 ترليون", 13, "¤ 00 ترليون", 14, "¤ 000 ترليون"])}), "ar_DZ", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 ألف", 4, "00 ألف", 5, "000 ألف", 6, "0 مليون", 7, "00 مليون", 8, "000 مليون", 9, "0 مليار", 10, "00 مليار", 11, "000 مليار", 12, "0 ترليون", 13, "00 ترليون", 14, "000 ترليون"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 ألف", 4, "00 ألف", 5, "000 ألف", 6, "0 مليون", 7, "00 مليون", 8, "000 مليون", 9, "0 مليار", 10, "00 مليار", 11, "000 مليار", 12, "0 ترليون", 13, "00 ترليون", 14, "000 ترليون"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤ 0 ألف", 4, "¤ 00 ألف", 5, "¤ 000 ألف", 6, "¤ 0 مليون", 7, "¤ 00 مليون", 8, "¤ 000 مليون", 9, "¤ 0 مليار", 10, "¤ 00 مليار", 11, "¤ 000 مليار", 12, "¤ 0 ترليون", 13, "¤ 00 ترليون", 14, "¤ 000 ترليون"])}), "ar_EG", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 ألف", 4, "00 ألف", 5, "000 ألف", 6, "0 مليون", 7, "00 مليون", 8, "000 مليون", 9, "0 مليار", 10, "00 مليار", 11, "000 مليار", 12, "0 ترليون", 13, "00 ترليون", 14, "000 ترليون"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 ألف", 4, "00 ألف", 5, "000 ألف", 6, "0 مليون", 7, "00 مليون", 8, "000 مليون", 9, "0 مليار", 10, "00 مليار", 11, "000 مليار", 12, "0 ترليون", 13, "00 ترليون", 14, "000 ترليون"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤ 0 ألف", 4, "¤ 00 ألف", 5, "¤ 000 ألف", 6, "¤ 0 مليون", 7, "¤ 00 مليون", 8, "¤ 000 مليون", 9, "¤ 0 مليار", 10, "¤ 00 مليار", 11, "¤ 000 مليار", 12, "¤ 0 ترليون", 13, "¤ 00 ترليون", 14, "¤ 000 ترليون"])}), "az", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0K", 4, "00K", 5, "000K", 6, "0M", 7, "00M", 8, "000M", 9, "0G", 10, "00G", 11, "000G", 12, "0T", 13, "00T", 14, "000T"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 min", 4, "00 min", 5, "000 min", 6, "0 milyon", 7, "00 milyon", 8, "000 milyon", 9, "0 milyard", 10, "00 milyard", 11, "000 milyard", 12, "0 trilyon", 13, "00 trilyon", 14, "000 trilyon"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤ 0K", 4, "¤ 00K", 5, "¤ 000K", 6, "¤ 0M", 7, "¤ 00M", 8, "¤ 000M", 9, "¤ 0G", 10, "¤ 00G", 11, "¤ 000G", 12, "¤ 0T", 13, "¤ 00T", 14, "¤ 000T"])}), "be", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 тыс.", 4, "00 тыс.", 5, "000 тыс.", 6, "0 млн", 7, "00 млн", 8, "000 млн", 9, "0 млрд", 10, "00 млрд", 11, "000 млрд", 12, "0 трлн", 13, "00 трлн", 14, "000 трлн"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 тысячы", 4, "00 тысячы", 5, "000 тысячы", 6, "0 мільёна", 7, "00 мільёна", 8, "000 мільёна", 9, "0 мільярда", 10, "00 мільярда", 11, "000 мільярда", 12, "0 трыльёна", 13, "00 трыльёна", 14, "000 трыльёна"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 тыс. ¤", 4, "00 тыс. ¤", 5, "000 тыс. ¤", 6, "0 млн ¤", 7, "00 млн ¤", 8, "000 млн ¤", 9, "0 млрд ¤ ", 10, "00 млрд ¤", 11, "000 млрд ¤", 12, "0 трлн ¤", 13, "00 трлн ¤", 14, "000 трлн ¤"])}), "bg", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 хил.", 4, "00 хил.", 5, "000 хил.", 6, "0 млн.", 7, "00 млн.", 8, "000 млн.", 9, "0 млрд.", 10, "00 млрд.", 11, "000 млрд.", 12, "0 трлн.", 13, "00 трлн.", 14, "000 трлн."]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 хиляди", 4, "00 хиляди", 5, "000 хиляди", 6, "0 милиона", 7, "00 милиона", 8, "000 милиона", 9, "0 милиарда", 10, "00 милиарда", 11, "000 милиарда", 12, "0 трилиона", 13, "00 трилиона", 14, "000 трилиона"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 хил. ¤", 4, "00 хил. ¤", 5, "000 хил. ¤", 6, "0 млн. ¤", 7, "00 млн. ¤", 8, "000 млн. ¤", 9, "0 млрд. ¤", 10, "00 млрд. ¤", 11, "000 млрд. ¤", 12, "0 трлн. ¤", 13, "00 трлн. ¤", 14, "000 трлн. ¤"])}), "bn", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 হাজার", 4, "00 হাজার", 5, "0 লাখ", 6, "0M", 7, "00M", 8, "000M", 9, "0B", 10, "00B", 11, "000B", 12, "0T", 13, "00T", 14, "000T"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 হাজার", 4, "00 হাজার", 5, "0 লাখ", 6, "0 মিলিয়ন", 7, "00 মিলিয়ন", 8, "000 মিলিয়ন", 9, "0 বিলিয়ন", 10, "00 বিলিয়ন", 11, "000 বিলিয়ন", 12, "0 ট্রিলিয়ন", 13, "00 ট্রিলিয়ন", 14, "000 ট্রিলিয়ন"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 হাজার¤", 4, "00 হাজার¤", 5, "0 লাখ¤", 6, "0 লাখ¤", 7, "00 কোটি¤", 8, "000 কোটি¤", 9, "0 একশো কোটি¤", 10, "00 হাজার কোটি¤", 11, "000 সহস্র কোটি¤", 12, "0 দশ সহস্রের ত্রিঘাত¤", 13, "00 একশো সহস্রের ত্রিঘাত¤", 14, "000 সহস্র সহস্রের ত্রিঘাত¤"])}), "br", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0k", 4, "00k", 5, "000k", 6, "0M", 7, "00M", 8, "000M", 9, "0G", 10, "00G", 11, "000G", 12, "0T", 13, "00T", 14, "000T"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 miliad", 4, "00 miliad", 5, "000 miliad", 6, "0 milion", 7, "00 milion", 8, "000 milion", 9, "0 miliard", 10, "00 miliard", 11, "000 miliard", 12, "0 bilion", 13, "00 bilion", 14, "000 bilion"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 k¤", 4, "00 k¤", 5, "000 k¤", 6, "0 M¤", 7, "00 M¤", 8, "000 M¤", 9, "0 G¤", 10, "00 G¤", 11, "000 G¤", 12, "0 T¤", 13, "00 T¤", 14, "000 T¤"])}), "bs", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 hilj.", 4, "00 hilj.", 5, "000 hilj.", 6, "0 mil.", 7, "00 mil.", 8, "000 mil.", 9, "0 mlr.", 10, "00 mlr.", 11, "000 mlr.", 12, "0 bil.", 13, "00 bil.", 14, "000 bil."]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 hiljada", 4, "00 hiljada", 5, "000 hiljada", 6, "0 miliona", 7, "00 miliona", 8, "000 miliona", 9, "0 milijardi", 10, "00 milijardi", 11, "000 milijardi", 12, "0 biliona", 13, "00 biliona", 14, "000 biliona"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 hilj. ¤", 4, "00 hilj. ¤", 5, "000 hilj. ¤", 6, "0 mil. ¤", 7, "00 mil. ¤", 8, "000 mil. ¤", 9, "0 mlr. ¤", 10, "00 mlr. ¤", 11, "000 mlr. ¤", 12, "0 bil. ¤", 13, "00 bil. ¤", 14, "000 bil. ¤"])}), "ca", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0m", 4, "00m", 5, "000m", 6, "0M", 7, "00 M", 8, "000 M", 9, "0000 M", 10, "00mM", 11, "000mM", 12, "0B", 13, "00 B", 14, "000 B"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 milers", 4, "00 milers", 5, "000 milers", 6, "0 milions", 7, "00 milions", 8, "000 milions", 9, "0 milers de milions", 10, "00 milers de milions", 11, "000 milers de milions", 12, "0 bilions", 13, "00 bilions", 14, "000 bilions"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0m ¤", 4, "00m ¤", 5, "000m ¤", 6, "0M ¤", 7, "00 M ¤", 8, "000 M ¤", 9, "0000 M ¤", 10, "00mM ¤", 11, "000mM ¤", 12, "0B ¤", 13, "00 B ¤", 14, "000 B ¤"])}), "chr", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0K", 4, "00K", 5, "000K", 6, "0M", 7, "00M", 8, "000M", 9, "0B", 10, "00B", 11, "000B", 12, "0T", 13, "00T", 14, "000T"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 ᎢᏯᎦᏴᎵ", 4, "00 ᎢᏯᎦᏴᎵ", 5, "000 ᎢᏯᎦᏴᎵ", 6, "0 ᎢᏳᏆᏗᏅᏛ", 7, "00 ᎢᏳᏆᏗᏅᏛ", 8, "000 ᎢᏳᏆᏗᏅᏛ", 9, "0 ᎢᏯᏔᎳᏗᏅᏛ", 10, "00 ᎢᏯᏔᎳᏗᏅᏛ", 11, "000 ᎢᏯᏔᎳᏗᏅᏛ", 12, "0 ᎢᏯᏦᎠᏗᏅᏛ", 13, "00 ᎢᏯᏦᎠᏗᏅᏛ", 14, "000 ᎢᏯᏦᎠᏗᏅᏛ"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0K", 4, "¤00K", 5, "¤000K", 6, "¤0M", 7, "¤00M", 8, "¤000M", 9, "¤0B", 10, "¤00B", 11, "¤000B", 12, "¤0T", 13, "¤00T", 14, "¤000T"])}), "cs", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 tis.", 4, "00 tis.", 5, "000 tis.", 6, "0 mil.", 7, "00 mil.", 8, "000 mil.", 9, "0 mld.", 10, "00 mld.", 11, "000 mld.", 12, "0 bil.", 13, "00 bil.", 14, "000 bil."]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 tisíc", 4, "00 tisíc", 5, "000 tisíc", 6, "0 milionů", 7, "00 milionů", 8, "000 milionů", 9, "0 miliard", 10, "00 miliard", 11, "000 miliard", 12, "0 bilionů", 13, "00 bilionů", 14, "000 bilionů"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 tis. ¤", 4, "00 tis. ¤", 5, "000 tis. ¤", 6, "0 mil. ¤", 7, "00 mil. ¤", 8, "000 mil. ¤", 9, "0 mld. ¤", 10, "00 mld. ¤", 11, "000 mld. ¤", 12, "0 bil. ¤", 13, "00 bil. ¤", 14, "000 bil. ¤"])}), "cy", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0K", 4, "00K", 5, "000K", 6, "0M", 7, "00M", 8, "000M", 9, "0B", 10, "00B", 11, "000B", 12, "0T", 13, "00T", 14, "000T"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 mil", 4, "00 mil", 5, "000 mil", 6, "0 miliwn", 7, "00 miliwn", 8, "000 miliwn", 9, "0 biliwn", 10, "00 biliwn", 11, "000 biliwn", 12, "0 triliwn", 13, "00 triliwn", 14, "000 triliwn"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0K", 4, "¤00K", 5, "¤000K", 6, "¤0M", 7, "¤00M", 8, "¤000M", 9, "¤0B", 10, "¤00B", 11, "¤000B", 12, "¤0T", 13, "¤00T", 14, "¤000T"])}), "da", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 t", 4, "00 t", 5, "000 t", 6, "0 mio", 7, "00 mio", 8, "000 mio", 9, "0 mia", 10, "00 mia", 11, "000 mia", 12, "0 bio", 13, "00 bio", 14, "000 bio"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 tusind", 4, "00 tusind", 5, "000 tusind", 6, "0 millioner", 7, "00 millioner", 8, "000 millioner", 9, "0 milliarder", 10, "00 milliarder", 11, "000 milliarder", 12, "0 billioner", 13, "00 billioner", 14, "000 billioner"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 t ¤", 4, "00 t ¤", 5, "000 t ¤", 6, "0 mio ¤", 7, "00 mio ¤", 8, "000 mio ¤", 9, "0 mia ¤", 10, "00 mia ¤", 11, "000 mia ¤", 12, "0 bio ¤", 13, "00 bio ¤", 14, "000 bio ¤"])}), "de", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0", 4, "0", 5, "0", 6, "0 Mio.", 7, "00 Mio.", 8, "000 Mio.", 9, "0 Mrd.", 10, "00 Mrd.", 11, "000 Mrd.", 12, "0 Bio.", 13, "00 Bio.", 14, "000 Bio."]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 Tausend", 4, "00 Tausend", 5, "000 Tausend", 6, "0 Millionen", 7, "00 Millionen", 8, "000 Millionen", 9, "0 Milliarden", 10, "00 Milliarden", 11, "000 Milliarden", 12, "0 Billionen", 13, "00 Billionen", 14, "000 Billionen"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0", 4, "0", 5, "0", 6, "0 Mio. ¤", 7, "00 Mio. ¤", 8, "000 Mio. ¤", 9, "0 Mrd. ¤", 10, "00 Mrd. ¤", 11, "000 Mrd. ¤", 12, "0 Bio. ¤", 13, "00 Bio. ¤", 14, "000 Bio. ¤"])}), "de_AT", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0", 4, "0", 5, "0", 6, "0 Mio.", 7, "00 Mio.", 8, "000 Mio.", 9, "0 Mrd.", 10, "00 Mrd.", 11, "000 Mrd.", 12, "0 Bio.", 13, "00 Bio.", 14, "000 Bio."]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 Tausend", 4, "00 Tausend", 5, "000 Tausend", 6, "0 Millionen", 7, "00 Millionen", 8, "000 Millionen", 9, "0 Milliarden", 10, "00 Milliarden", 11, "000 Milliarden", 12, "0 Billionen", 13, "00 Billionen", 14, "000 Billionen"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0", 4, "0", 5, "0", 6, "0 Mio. ¤", 7, "00 Mio. ¤", 8, "000 Mio. ¤", 9, "0 Mrd. ¤", 10, "00 Mrd. ¤", 11, "000 Mrd. ¤", 12, "0 Bio. ¤", 13, "00 Bio. ¤", 14, "000 Bio. ¤"])}), "de_CH", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0", 4, "0", 5, "0", 6, "0 Mio.", 7, "00 Mio.", 8, "000 Mio.", 9, "0 Mrd.", 10, "00 Mrd.", 11, "000 Mrd.", 12, "0 Bio.", 13, "00 Bio.", 14, "000 Bio."]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 Tausend", 4, "00 Tausend", 5, "000 Tausend", 6, "0 Millionen", 7, "00 Millionen", 8, "000 Millionen", 9, "0 Milliarden", 10, "00 Milliarden", 11, "000 Milliarden", 12, "0 Billionen", 13, "00 Billionen", 14, "000 Billionen"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0", 4, "0", 5, "0", 6, "0 Mio. ¤", 7, "00 Mio. ¤", 8, "000 Mio. ¤", 9, "0 Mrd. ¤", 10, "00 Mrd. ¤", 11, "000 Mrd. ¤", 12, "0 Bio. ¤", 13, "00 Bio. ¤", 14, "000 Bio. ¤"])}), "el", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 χιλ.", 4, "00 χιλ.", 5, "000 χιλ.", 6, "0 εκ.", 7, "00 εκ.", 8, "000 εκ.", 9, "0 δισ.", 10, "00 δισ.", 11, "000 δισ.", 12, "0 τρισ.", 13, "00 τρισ.", 14, "000 τρισ."]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 χιλιάδες", 4, "00 χιλιάδες", 5, "000 χιλιάδες", 6, "0 εκατομμύρια", 7, "00 εκατομμύρια", 8, "000 εκατομμύρια", 9, "0 δισεκατομμύρια", 10, "00 δισεκατομμύρια", 11, "000 δισεκατομμύρια", 12, "0 τρισεκατομμύρια", 13, "00 τρισεκατομμύρια", 14, "000 τρισεκατομμύρια"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 χιλ. ¤", 4, "00 χιλ. ¤", 5, "000 χιλ. ¤", 6, "0 εκ. ¤", 7, "00 εκ. ¤", 8, "000 εκ. ¤", 9, "0 δισ. ¤", 10, "00 δισ. ¤", 11, "000 δισ. ¤", 12, "0 τρισ. ¤", 13, "00 τρισ. ¤", 14, "000 τρισ. ¤"])}), "en", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0K", 4, "00K", 5, "000K", 6, "0M", 7, "00M", 8, "000M", 9, "0B", 10, "00B", 11, "000B", 12, "0T", 13, "00T", 14, "000T"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 thousand", 4, "00 thousand", 5, "000 thousand", 6, "0 million", 7, "00 million", 8, "000 million", 9, "0 billion", 10, "00 billion", 11, "000 billion", 12, "0 trillion", 13, "00 trillion", 14, "000 trillion"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0K", 4, "¤00K", 5, "¤000K", 6, "¤0M", 7, "¤00M", 8, "¤000M", 9, "¤0B", 10, "¤00B", 11, "¤000B", 12, "¤0T", 13, "¤00T", 14, "¤000T"])}), "en_AU", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0K", 4, "00K", 5, "000K", 6, "0M", 7, "00M", 8, "000M", 9, "0B", 10, "00B", 11, "000B", 12, "0T", 13, "00T", 14, "000T"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 thousand", 4, "00 thousand", 5, "000 thousand", 6, "0 million", 7, "00 million", 8, "000 million", 9, "0 billion", 10, "00 billion", 11, "000 billion", 12, "0 trillion", 13, "00 trillion", 14, "000 trillion"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0K", 4, "¤00K", 5, "¤000K", 6, "¤0M", 7, "¤00M", 8, "¤000M", 9, "¤0B", 10, "¤00B", 11, "¤000B", 12, "¤0T", 13, "¤00T", 14, "¤000T"])}), "en_CA", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0K", 4, "00K", 5, "000K", 6, "0M", 7, "00M", 8, "000M", 9, "0B", 10, "00B", 11, "000B", 12, "0T", 13, "00T", 14, "000T"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 thousand", 4, "00 thousand", 5, "000 thousand", 6, "0 million", 7, "00 million", 8, "000 million", 9, "0 billion", 10, "00 billion", 11, "000 billion", 12, "0 trillion", 13, "00 trillion", 14, "000 trillion"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0K", 4, "¤00K", 5, "¤000K", 6, "¤0M", 7, "¤00M", 8, "¤000M", 9, "¤0B", 10, "¤00B", 11, "¤000B", 12, "¤0T", 13, "¤00T", 14, "¤000T"])}), "en_GB", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0K", 4, "00K", 5, "000K", 6, "0M", 7, "00M", 8, "000M", 9, "0B", 10, "00B", 11, "000B", 12, "0T", 13, "00T", 14, "000T"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 thousand", 4, "00 thousand", 5, "000 thousand", 6, "0 million", 7, "00 million", 8, "000 million", 9, "0 billion", 10, "00 billion", 11, "000 billion", 12, "0 trillion", 13, "00 trillion", 14, "000 trillion"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0K", 4, "¤00K", 5, "¤000K", 6, "¤0M", 7, "¤00M", 8, "¤000M", 9, "¤0B", 10, "¤00B", 11, "¤000B", 12, "¤0T", 13, "¤00T", 14, "¤000T"])}), "en_IE", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0K", 4, "00K", 5, "000K", 6, "0M", 7, "00M", 8, "000M", 9, "0B", 10, "00B", 11, "000B", 12, "0T", 13, "00T", 14, "000T"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 thousand", 4, "00 thousand", 5, "000 thousand", 6, "0 million", 7, "00 million", 8, "000 million", 9, "0 billion", 10, "00 billion", 11, "000 billion", 12, "0 trillion", 13, "00 trillion", 14, "000 trillion"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0K", 4, "¤00K", 5, "¤000K", 6, "¤0M", 7, "¤00M", 8, "¤000M", 9, "¤0B", 10, "¤00B", 11, "¤000B", 12, "¤0T", 13, "¤00T", 14, "¤000T"])}), "en_IN", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0K", 4, "00K", 5, "000K", 6, "0M", 7, "00M", 8, "000M", 9, "0B", 10, "00B", 11, "000B", 12, "0T", 13, "00T", 14, "000T"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 thousand", 4, "00 thousand", 5, "000 thousand", 6, "0 million", 7, "00 million", 8, "000 million", 9, "0 billion", 10, "00 billion", 11, "000 billion", 12, "0 trillion", 13, "00 trillion", 14, "000 trillion"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0K", 4, "¤00K", 5, "¤000K", 6, "¤0M", 7, "¤00M", 8, "¤000M", 9, "¤0B", 10, "¤00B", 11, "¤000B", 12, "¤0T", 13, "¤00T", 14, "¤000T"])}), "en_MY", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0K", 4, "00K", 5, "000K", 6, "0M", 7, "00M", 8, "000M", 9, "0B", 10, "00B", 11, "000B", 12, "0T", 13, "00T", 14, "000T"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 thousand", 4, "00 thousand", 5, "000 thousand", 6, "0 million", 7, "00 million", 8, "000 million", 9, "0 billion", 10, "00 billion", 11, "000 billion", 12, "0 trillion", 13, "00 trillion", 14, "000 trillion"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0K", 4, "¤00K", 5, "¤000K", 6, "¤0M", 7, "¤00M", 8, "¤000M", 9, "¤0B", 10, "¤00B", 11, "¤000B", 12, "¤0T", 13, "¤00T", 14, "¤000T"])}), "en_SG", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0K", 4, "00K", 5, "000K", 6, "0M", 7, "00M", 8, "000M", 9, "0B", 10, "00B", 11, "000B", 12, "0T", 13, "00T", 14, "000T"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 thousand", 4, "00 thousand", 5, "000 thousand", 6, "0 million", 7, "00 million", 8, "000 million", 9, "0 billion", 10, "00 billion", 11, "000 billion", 12, "0 trillion", 13, "00 trillion", 14, "000 trillion"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0K", 4, "¤00K", 5, "¤000K", 6, "¤0M", 7, "¤00M", 8, "¤000M", 9, "¤0B", 10, "¤00B", 11, "¤000B", 12, "¤0T", 13, "¤00T", 14, "¤000T"])}), "en_US", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0K", 4, "00K", 5, "000K", 6, "0M", 7, "00M", 8, "000M", 9, "0B", 10, "00B", 11, "000B", 12, "0T", 13, "00T", 14, "000T"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 thousand", 4, "00 thousand", 5, "000 thousand", 6, "0 million", 7, "00 million", 8, "000 million", 9, "0 billion", 10, "00 billion", 11, "000 billion", 12, "0 trillion", 13, "00 trillion", 14, "000 trillion"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0K", 4, "¤00K", 5, "¤000K", 6, "¤0M", 7, "¤00M", 8, "¤000M", 9, "¤0B", 10, "¤00B", 11, "¤000B", 12, "¤0T", 13, "¤00T", 14, "¤000T"])}), "en_ZA", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0K", 4, "00K", 5, "000K", 6, "0M", 7, "00M", 8, "000M", 9, "0B", 10, "00B", 11, "000B", 12, "0T", 13, "00T", 14, "000T"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 thousand", 4, "00 thousand", 5, "000 thousand", 6, "0 million", 7, "00 million", 8, "000 million", 9, "0 billion", 10, "00 billion", 11, "000 billion", 12, "0 trillion", 13, "00 trillion", 14, "000 trillion"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0K", 4, "¤00K", 5, "¤000K", 6, "¤0M", 7, "¤00M", 8, "¤000M", 9, "¤0B", 10, "¤00B", 11, "¤000B", 12, "¤0T", 13, "¤00T", 14, "¤000T"])}), "es", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 mil", 4, "00 mil", 5, "000 mil", 6, "0 M", 7, "00 M", 8, "000 M", 9, "0000 M", 10, "00 mil M", 11, "000 mil M", 12, "0 B", 13, "00 B", 14, "000 B"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 mil", 4, "00 mil", 5, "000 mil", 6, "0 millones", 7, "00 millones", 8, "000 millones", 9, "0 mil millones", 10, "00 mil millones", 11, "000 mil millones", 12, "0 billones", 13, "00 billones", 14, "000 billones"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 mil ¤", 4, "00 mil ¤", 5, "000 mil ¤", 6, "0 M¤", 7, "00 M¤", 8, "000 M¤", 9, "0000 M¤", 10, "00 mil M¤", 11, "000 mil M¤", 12, "0 B¤", 13, "00 B¤", 14, "000 B¤"])}), "es_419", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 K", 4, "00 k", 5, "000 k", 6, "0 M", 7, "00 M", 8, "000 M", 9, "0k M", 10, "00k M", 11, "000k M", 12, "0 B", 13, "00 B", 14, "000 B"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 mil", 4, "00 mil", 5, "000 mil", 6, "0 millones", 7, "00 millones", 8, "000 millones", 9, "0 mil millones", 10, "00 mil millones", 11, "000 mil millones", 12, "0 billón", 13, "00 billones", 14, "000 billones"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0 K", 4, "¤00 K", 5, "¤000 K", 6, "¤0 M", 7, "¤00 M", 8, "¤000 M", 9, "¤0000 M", 10, "¤00 MRD", 11, "¤000 MRD", 12, "¤0 B", 13, "¤00 B", 14, "¤000 B"])}), "es_ES", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 mil", 4, "00 mil", 5, "000 mil", 6, "0 M", 7, "00 M", 8, "000 M", 9, "0000 M", 10, "00 mil M", 11, "000 mil M", 12, "0 B", 13, "00 B", 14, "000 B"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 mil", 4, "00 mil", 5, "000 mil", 6, "0 millones", 7, "00 millones", 8, "000 millones", 9, "0 mil millones", 10, "00 mil millones", 11, "000 mil millones", 12, "0 billones", 13, "00 billones", 14, "000 billones"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 mil ¤", 4, "00 mil ¤", 5, "000 mil ¤", 6, "0 M¤", 7, "00 M¤", 8, "000 M¤", 9, "0000 M¤", 10, "00 mil M¤", 11, "000 mil M¤", 12, "0 B¤", 13, "00 B¤", 14, "000 B¤"])}), "es_MX", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 k", 4, "00 k", 5, "000 k", 6, "0 M", 7, "00 M", 8, "000 M", 9, "0000 M", 10, "00 mil M", 11, "000 mil M", 12, "0 B", 13, "00 B", 14, "000 B"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 mil", 4, "00 mil", 5, "000 mil", 6, "0 millones", 7, "00 millones", 8, "000 millones", 9, "0 mil millones", 10, "00 mil millones", 11, "000 mil millones", 12, "0 billones", 13, "00 billones", 14, "000 billones"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 k¤", 4, "00 k¤", 5, "000 k¤", 6, "0 M¤", 7, "00 M¤", 8, "000 M¤", 9, "0000 M¤", 10, "00 MRD ¤", 11, "000 MRD ¤", 12, "0 B¤", 13, "00 B¤", 14, "000 B¤"])}), "es_US", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0", 4, "00 K", 5, "000 K", 6, "0 M", 7, "00 M", 8, "000 M", 9, "0 B", 10, "00 B", 11, "000 B", 12, "0 T", 13, "00 T", 14, "000 T"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 mil", 4, "00 mil", 5, "000 mil", 6, "0 millones", 7, "00 millones", 8, "000 millones", 9, "0 billones", 10, "00 billones", 11, "000 billones", 12, "0 trillones", 13, "00 trillones", 14, "000 trillones"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 K ¤", 4, "00 K ¤", 5, "000 K ¤", 6, "0 M ¤", 7, "00 M ¤", 8, "000 M ¤", 9, "0000 M ¤", 10, "¤00 B", 11, "¤000 B", 12, "¤0 T", 13, "¤00 T", 14, "¤000 T"])}), "et", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 tuh", 4, "00 tuh", 5, "000 tuh", 6, "0 mln", 7, "00 mln", 8, "000 mln", 9, "0 mld", 10, "00 mld", 11, "000 mld", 12, "0 trl", 13, "00 trl", 14, "000 trl"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 tuhat", 4, "00 tuhat", 5, "000 tuhat", 6, "0 miljonit", 7, "00 miljonit", 8, "000 miljonit", 9, "0 miljardit", 10, "00 miljardit", 11, "000 miljardit", 12, "0 triljonit", 13, "00 triljonit", 14, "000 triljonit"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 tuh ¤", 4, "00 tuh ¤", 5, "000 tuh ¤", 6, "0 mln ¤", 7, "00 mln ¤", 8, "000 mln ¤", 9, "0 mld ¤", 10, "00 mld ¤", 11, "000 mld ¤", 12, "0 trl ¤", 13, "00 trl ¤", 14, "000 trl ¤"])}), "eu", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0000", 4, "00000", 5, "000000", 6, "0 M", 7, "00 M", 8, "000 M", 9, "0000 M", 10, "00000 M", 11, "000000 M", 12, "0 B", 13, "00 B", 14, "000 B"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0000", 4, "00000", 5, "000000", 6, "0 milioi", 7, "00 milioi", 8, "000 milioi", 9, "0000 milioi", 10, "00000 milioi", 11, "000000 milioi", 12, "0 bilioi", 13, "00 bilioi", 14, "000 bilioi"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0000 ¤", 4, "00000 ¤", 5, "000000 ¤", 6, "0 M ¤", 7, "00 M ¤", 8, "000 M ¤", 9, "0000 M ¤", 10, "00000 M ¤", 11, "000000 M ¤", 12, "0 B ¤", 13, "00 B ¤", 14, "000 B ¤"])}), "fa", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 هزار", 4, "00 هزار", 5, "000 هزار", 6, "0 میلیون", 7, "00 میلیون", 8, "000 م", 9, "0 م", 10, "00 م", 11, "000 میلیارد", 12, "0 تریلیون", 13, "00 ت", 14, "000 ت"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 هزار", 4, "00 هزار", 5, "000 هزار", 6, "0 میلیون", 7, "00 میلیون", 8, "000 میلیون", 9, "0 میلیارد", 10, "00 میلیارد", 11, "000 میلیارد", 12, "0 هزارمیلیارد", 13, "00 هزارمیلیارد", 14, "000 هزارمیلیارد"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 هزار ¤", 4, "00 هزار ¤", 5, "000 هزار ¤", 6, "0 میلیون ¤", 7, "00 میلیون ¤", 8, "000 میلیون ¤", 9, "0 میلیارد ¤", 10, "00 میلیارد ¤", 11, "000 میلیارد ¤", 12, "0 هزارمیلیارد ¤", 13, "00 هزارمیلیارد ¤", 14, "000 هزارمیلیارد ¤"])}), "fi", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 t.", 4, "00 t.", 5, "000 t.", 6, "0 milj.", 7, "00 milj.", 8, "000 milj.", 9, "0 mrd.", 10, "00 mrd.", 11, "000 mrd.", 12, "0 bilj.", 13, "00 bilj.", 14, "000 bilj."]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 tuhatta", 4, "00 tuhatta", 5, "000 tuhatta", 6, "0 miljoonaa", 7, "00 miljoonaa", 8, "000 miljoonaa", 9, "0 miljardia", 10, "00 miljardia", 11, "000 miljardia", 12, "0 biljoonaa", 13, "00 biljoonaa", 14, "000 biljoonaa"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 t. ¤", 4, "00 t. ¤", 5, "000 t. ¤", 6, "0 milj. ¤", 7, "00 milj. ¤", 8, "000 milj. ¤", 9, "0 mrd. ¤", 10, "00 mrd. ¤", 11, "000 mrd. ¤", 12, "0 bilj. ¤", 13, "00 bilj. ¤", 14, "000 bilj. ¤"])}), "fil", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0K", 4, "00K", 5, "000K", 6, "0M", 7, "00M", 8, "000M", 9, "0B", 10, "00B", 11, "000B", 12, "0T", 13, "00T", 14, "000T"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 na libo", 4, "00 na libo", 5, "000 na libo", 6, "0 na milyon", 7, "00 na milyon", 8, "000 na milyon", 9, "0 na bilyon", 10, "00 na bilyon", 11, "000 na bilyon", 12, "0 na trilyon", 13, "00 na trilyon", 14, "000 na trilyon"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0K", 4, "¤00K", 5, "¤000K", 6, "¤0M", 7, "¤00M", 8, "¤000M", 9, "¤0B", 10, "¤00B", 11, "¤000B", 12, "¤0T", 13, "¤00T", 14, "¤000T"])}), "fr", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 k", 4, "00 k", 5, "000 k", 6, "0 M", 7, "00 M", 8, "000 M", 9, "0 Md", 10, "00 Md", 11, "000 Md", 12, "0 Bn", 13, "00 Bn", 14, "000 Bn"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 mille", 4, "00 mille", 5, "000 mille", 6, "0 millions", 7, "00 millions", 8, "000 millions", 9, "0 milliards", 10, "00 milliards", 11, "000 milliards", 12, "0 billions", 13, "00 billions", 14, "000 billions"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 k ¤", 4, "00 k ¤", 5, "000 k ¤", 6, "0 M ¤", 7, "00 M ¤", 8, "000 M ¤", 9, "0 Md ¤", 10, "00 Md ¤", 11, "000 Md ¤", 12, "0 Bn ¤", 13, "00 Bn ¤", 14, "000 Bn ¤"])}), "fr_CA", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 k", 4, "00 k", 5, "000 k", 6, "0 M", 7, "00 M", 8, "000 M", 9, "0 G", 10, "00 G", 11, "000 G", 12, "0 T", 13, "00 T", 14, "000 T"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 mille", 4, "00 mille", 5, "000 mille", 6, "0 millions", 7, "00 millions", 8, "000 millions", 9, "0 milliards", 10, "00 milliards", 11, "000 milliards", 12, "0 billions", 13, "00 billions", 14, "000 billions"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 k¤", 4, "00 k¤", 5, "000 k¤", 6, "0 M¤", 7, "00 M¤", 8, "000 M¤", 9, "0 G¤", 10, "00 G¤", 11, "000 G¤", 12, "0 T¤", 13, "00 T¤", 14, "000 T¤"])}), "fr_CH", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 k", 4, "00 k", 5, "000 k", 6, "0 M", 7, "00 M", 8, "000 M", 9, "0 Md", 10, "00 Md", 11, "000 Md", 12, "0 Bn", 13, "00 Bn", 14, "000 Bn"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 mille", 4, "00 mille", 5, "000 mille", 6, "0 millions", 7, "00 millions", 8, "000 millions", 9, "0 milliards", 10, "00 milliards", 11, "000 milliards", 12, "0 billions", 13, "00 billions", 14, "000 billions"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 k ¤", 4, "00 k ¤", 5, "000 k ¤", 6, "0 M ¤", 7, "00 M ¤", 8, "000 M ¤", 9, "0 Md ¤", 10, "00 Md ¤", 11, "000 Md ¤", 12, "0 Bn ¤", 13, "00 Bn ¤", 14, "000 Bn ¤"])}), "ga", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0k", 4, "00k", 5, "000k", 6, "0M", 7, "00M", 8, "000M", 9, "0B", 10, "00B", 11, "000B", 12, "0T", 13, "00T", 14, "000T"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 míle", 4, "00 míle", 5, "000 míle", 6, "0 milliún", 7, "00 milliún", 8, "000 milliún", 9, "0 billiún", 10, "00 billiún", 11, "000 billiún", 12, "0 trilliún", 13, "00 trilliún", 14, "000 trilliún"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0k", 4, "¤00k", 5, "¤000k", 6, "¤0M", 7, "¤00M", 8, "¤000M", 9, "¤0B", 10, "¤00B", 11, "¤000B", 12, "¤0T", 13, "¤00T", 14, "¤000T"])}), "gl", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0", 4, "0", 5, "0", 6, "0 mill.", 7, "00 mill.", 8, "000 mill", 9, "0", 10, "0", 11, "0", 12, "0 bill.", 13, "00 bill.", 14, "000 bill."]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0", 4, "0", 5, "0", 6, "0 millóns", 7, "00 millóns", 8, "000 millóns", 9, "0", 10, "0", 11, "0", 12, "0 billóns", 13, "00 billóns", 14, "000 billóns"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 ¤", 4, "0 ¤", 5, "0 ¤", 6, "0 M¤", 7, "00 M¤", 8, "000 M¤", 9, "0 ¤", 10, "0 ¤", 11, "0 ¤", 12, "0 B¤", 13, "00 B¤", 14, "000 B¤"])}), "gsw", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 Tsg.", 4, "00 Tsg.", 5, "000 Tsg.", 6, "0 Mio.", 7, "00 Mio.", 8, "000 Mio.", 9, "0 Mrd.", 10, "00 Mrd.", 11, "000 Mrd.", 12, "0 Bio.", 13, "00 Bio.", 14, "000 Bio."]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 Tuusig", 4, "00 Tuusig", 5, "000 Tuusig", 6, "0 Millioone", 7, "00 Millioone", 8, "000 Millioone", 9, "0 Milliarde", 10, "00 Milliarde", 11, "000 Milliarde", 12, "0 Billioone", 13, "00 Billioone", 14, "000 Billioone"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 Tsg. ¤", 4, "00 Tsg. ¤", 5, "000 Tsg. ¤", 6, "0 Mio. ¤", 7, "00 Mio. ¤", 8, "000 Mio. ¤", 9, "0 Mrd. ¤", 10, "00 Mrd. ¤", 11, "000 Mrd. ¤", 12, "0 Bio. ¤", 13, "00 Bio. ¤", 14, "000 Bio. ¤"])}), "gu", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 હજાર", 4, "00 હજાર", 5, "0 લાખ", 6, "00 લાખ", 7, "0 કરોડ", 8, "00 કરોડ", 9, "0 અબજ", 10, "00 અબજ", 11, "0 નિખર્વ", 12, "0 મહાપદ્મ", 13, "0 શંકુ", 14, "0 જલધિ"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 હજાર", 4, "00 હજાર", 5, "0 લાખ", 6, "00 લાખ", 7, "0 કરોડ", 8, "00 કરોડ", 9, "0 અબજ", 10, "00 અબજ", 11, "0 નિખર્વ", 12, "0 મહાપદ્મ", 13, "0 શંકુ", 14, "0 જલધિ"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0 હજાર", 4, "¤00 હજાર", 5, "¤0 લાખ", 6, "¤00 લાખ", 7, "¤0 કરોડ", 8, "¤00 કરોડ", 9, "¤0 અબજ", 10, "¤00 અબજ", 11, "¤0 નિખર્વ", 12, "¤0 મહાપદ્મ", 13, "¤0 શંકુ", 14, "¤0 જલધિ"])}), "haw", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0K", 4, "00K", 5, "000K", 6, "0M", 7, "00M", 8, "000M", 9, "0G", 10, "00G", 11, "000G", 12, "0T", 13, "00T", 14, "000T"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0K", 4, "¤00K", 5, "¤000K", 6, "¤0M", 7, "¤00M", 8, "¤000M", 9, "¤0G", 10, "¤00G", 11, "¤000G", 12, "¤0T", 13, "¤00T", 14, "¤000T"])}), "he", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0K", 4, "00K", 5, "000K", 6, "0M", 7, "00M", 8, "000M", 9, "0B", 10, "00B", 11, "000B", 12, "0T", 13, "00T", 14, "000T"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "‏0 אלף", 4, "‏00 אלף", 5, "‏000 אלף", 6, "‏0 מיליון", 7, "‏00 מיליון", 8, "‏000 מיליון", 9, "‏0 מיליארד", 10, "‏00 מיליארד", 11, "‏000 מיליארד", 12, "‏0 טריליון", 13, "‏00 טריליון", 14, "‏000 טריליון"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤ 0K", 4, "¤ 00K", 5, "¤000K", 6, "¤0M", 7, "¤00M", 8, "¤000M", 9, "¤0B", 10, "¤00B", 11, "¤000B", 12, "¤0T", 13, "¤00T", 14, "¤000T"])}), "hi", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 हज़ार", 4, "00 हज़ार", 5, "0 लाख", 6, "00 लाख", 7, "0 क॰", 8, "00 क॰", 9, "0 अ॰", 10, "00 अ॰", 11, "0 ख॰", 12, "00 ख॰", 13, "0 नील", 14, "00 नील"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 हज़ार", 4, "00 हज़ार", 5, "0 लाख", 6, "00 लाख", 7, "0 करोड़", 8, "00 करोड़", 9, "0 अरब", 10, "00 अरब", 11, "0 खरब", 12, "00 खरब", 13, "000 खरब", 14, "0000 खरब"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0 हज़ार", 4, "¤00 हज़ार", 5, "¤0 लाख", 6, "¤00 लाख", 7, "¤0 क॰", 8, "¤00 क॰", 9, "¤0 अ॰", 10, "¤00 अ॰", 11, "¤0 ख॰", 12, "¤00 ख॰", 13, "¤0 नील", 14, "¤00 नील"])}), "hr", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 tis.", 4, "00 tis.", 5, "000 tis.", 6, "0 mil.", 7, "00 mil.", 8, "000 mil.", 9, "0 mlr.", 10, "00 mlr.", 11, "000 mlr.", 12, "0 bil.", 13, "00 bil.", 14, "000 bil."]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 tisuća", 4, "00 tisuća", 5, "000 tisuća", 6, "0 milijuna", 7, "00 milijuna", 8, "000 milijuna", 9, "0 milijardi", 10, "00 milijardi", 11, "000 milijardi", 12, "0 bilijuna", 13, "00 bilijuna", 14, "000 bilijuna"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0000¤", 4, "00 tis. ¤", 5, "000 tis. ¤", 6, "0 mil. ¤", 7, "00 mil. ¤", 8, "000 mil. ¤", 9, "0 mlr. ¤", 10, "00 mlr. ¤", 11, "000 mlr. ¤", 12, "0 bil. ¤", 13, "00 bil. ¤", 14, "000 bil. ¤"])}), "hu", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 E", 4, "00 E", 5, "000 E", 6, "0 M", 7, "00 M", 8, "000 M", 9, "0 Mrd", 10, "00 Mrd", 11, "000 Mrd", 12, "0 B", 13, "00 B", 14, "000 B"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 ezer", 4, "00 ezer", 5, "000 ezer", 6, "0 millió", 7, "00 millió", 8, "000 millió", 9, "0 milliárd", 10, "00 milliárd", 11, "000 milliárd", 12, "0 billió", 13, "00 billió", 14, "000 billió"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 E ¤", 4, "00 E ¤", 5, "000 E ¤", 6, "0 M ¤", 7, "00 M ¤", 8, "000 M ¤", 9, "0 Mrd ¤", 10, "00 Mrd ¤", 11, "000 Mrd ¤", 12, "0 B ¤", 13, "00 B ¤", 14, "000 B ¤"])}), "hy", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 հզր", 4, "00 հզր", 5, "000 հզր", 6, "0 մլն", 7, "00 մլն", 8, "000 մլն", 9, "0 մլրդ", 10, "00 մլրդ", 11, "000 մլրդ", 12, "0 տրլն", 13, "00 տրլն", 14, "000 տրլն"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 հազար", 4, "00 հազար", 5, "000 հազար", 6, "0 միլիոն", 7, "00 միլիոն", 8, "000 միլիոն", 9, "0 միլիարդ", 10, "00 միլիարդ", 11, "000 միլիարդ", 12, "0 տրիլիոն", 13, "00 տրիլիոն", 14, "000 տրիլիոն"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 հզր ¤", 4, "00 հզր ¤", 5, "000 հզր ¤", 6, "0 մլն ¤", 7, "00 մլն ¤", 8, "000 մլն ¤", 9, "0 մլրդ ¤", 10, "00 մլրդ ¤", 11, "000 մլրդ ¤", 12, "0 տրլն ¤", 13, "00 տրլն ¤", 14, "000 տրլն ¤"])}), "id", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 rb", 4, "00 rb", 5, "000 rb", 6, "0 jt", 7, "00 jt", 8, "000 jt", 9, "0 M", 10, "00 M", 11, "000 M", 12, "0 T", 13, "00 T", 14, "000 T"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 ribu", 4, "00 ribu", 5, "000 ribu", 6, "0 juta", 7, "00 juta", 8, "000 juta", 9, "0 miliar", 10, "00 miliar", 11, "000 miliar", 12, "0 triliun", 13, "00 triliun", 14, "000 triliun"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0 rb", 4, "¤00 rb", 5, "¤000 rb", 6, "¤0 jt", 7, "¤00 jt", 8, "¤000 jt", 9, "¤0 M", 10, "¤00 M", 11, "¤000 M", 12, "¤0 T", 13, "¤00 T", 14, "¤000 T"])}), "in", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 rb", 4, "00 rb", 5, "000 rb", 6, "0 jt", 7, "00 jt", 8, "000 jt", 9, "0 M", 10, "00 M", 11, "000 M", 12, "0 T", 13, "00 T", 14, "000 T"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 ribu", 4, "00 ribu", 5, "000 ribu", 6, "0 juta", 7, "00 juta", 8, "000 juta", 9, "0 miliar", 10, "00 miliar", 11, "000 miliar", 12, "0 triliun", 13, "00 triliun", 14, "000 triliun"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0 rb", 4, "¤00 rb", 5, "¤000 rb", 6, "¤0 jt", 7, "¤00 jt", 8, "¤000 jt", 9, "¤0 M", 10, "¤00 M", 11, "¤000 M", 12, "¤0 T", 13, "¤00 T", 14, "¤000 T"])}), "is", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 þ.", 4, "00 þ.", 5, "000 þ.", 6, "0 m.", 7, "00 m.", 8, "000 m.", 9, "0 ma.", 10, "00 ma.", 11, "000 ma.", 12, "0 bn", 13, "00 bn", 14, "000 bn"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 þúsund", 4, "00 þúsund", 5, "000 þúsund", 6, "0 milljónir", 7, "00 milljónir", 8, "000 milljónir", 9, "0 milljarðar", 10, "00 milljarðar", 11, "000 milljarðar", 12, "0 billjónir", 13, "00 billjónir", 14, "000 billjónir"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 þ. ¤", 4, "00 þ. ¤", 5, "000 þ. ¤", 6, "0 m. ¤", 7, "00 m. ¤", 8, "000 m. ¤", 9, "0 ma. ¤", 10, "00 ma. ¤", 11, "000 ma. ¤", 12, "0 bn ¤", 13, "00 bn ¤", 14, "000 bn ¤"])}), "it", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0", 4, "0", 5, "0", 6, "0 Mln", 7, "00 Mln", 8, "000 Mln", 9, "0 Mld", 10, "00 Mld", 11, "000 Mld", 12, "0 Bln", 13, "00 Bln", 14, "000 Bln"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 mila", 4, "00 mila", 5, "000 mila", 6, "0 milioni", 7, "00 milioni", 8, "000 milioni", 9, "0 miliardi", 10, "00 miliardi", 11, "000 miliardi", 12, "0 mila miliardi", 13, "00 mila miliardi", 14, "000 mila miliardi"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0", 4, "0", 5, "0", 6, "0 Mio ¤", 7, "00 Mio ¤", 8, "000 Mio ¤", 9, "0 Mrd ¤", 10, "00 Mrd ¤", 11, "000 Mrd ¤", 12, "0 Bln ¤", 13, "00 Bln ¤", 14, "000 Bln ¤"])}), "it_CH", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0", 4, "0", 5, "0", 6, "0 Mln", 7, "00 Mln", 8, "000 Mln", 9, "0 Mld", 10, "00 Mld", 11, "000 Mld", 12, "0 Bln", 13, "00 Bln", 14, "000 Bln"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 mila", 4, "00 mila", 5, "000 mila", 6, "0 milioni", 7, "00 milioni", 8, "000 milioni", 9, "0 miliardi", 10, "00 miliardi", 11, "000 miliardi", 12, "0 mila miliardi", 13, "00 mila miliardi", 14, "000 mila miliardi"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0", 4, "0", 5, "0", 6, "0 Mio ¤", 7, "00 Mio ¤", 8, "000 Mio ¤", 9, "0 Mrd ¤", 10, "00 Mrd ¤", 11, "000 Mrd ¤", 12, "0 Bln ¤", 13, "00 Bln ¤", 14, "000 Bln ¤"])}), "iw", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0K", 4, "00K", 5, "000K", 6, "0M", 7, "00M", 8, "000M", 9, "0B", 10, "00B", 11, "000B", 12, "0T", 13, "00T", 14, "000T"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "‏0 אלף", 4, "‏00 אלף", 5, "‏000 אלף", 6, "‏0 מיליון", 7, "‏00 מיליון", 8, "‏000 מיליון", 9, "‏0 מיליארד", 10, "‏00 מיליארד", 11, "‏000 מיליארד", 12, "‏0 טריליון", 13, "‏00 טריליון", 14, "‏000 טריליון"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤ 0K", 4, "¤ 00K", 5, "¤000K", 6, "¤0M", 7, "¤00M", 8, "¤000M", 9, "¤0B", 10, "¤00B", 11, "¤000B", 12, "¤0T", 13, "¤00T", 14, "¤000T"])}), "ja", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0", 4, "0万", 5, "00万", 6, "000万", 7, "0000万", 8, "0億", 9, "00億", 10, "000億", 11, "0000億", 12, "0兆", 13, "00兆", 14, "000兆"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0", 4, "0万", 5, "00万", 6, "000万", 7, "0000万", 8, "0億", 9, "00億", 10, "000億", 11, "0000億", 12, "0兆", 13, "00兆", 14, "000兆"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0", 4, "¤0万", 5, "¤00万", 6, "¤000万", 7, "¤0000万", 8, "¤0億", 9, "¤00億", 10, "¤000億", 11, "¤0000億", 12, "¤0兆", 13, "¤00兆", 14, "¤000兆"])}), "ka", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 ათ.", 4, "00 ათ.", 5, "000 ათ.", 6, "0 მლნ.", 7, "00 მლნ.", 8, "000 მლნ.", 9, "0 მლრდ.", 10, "00 მლრდ.", 11, "000 მლრ.", 12, "0 ტრლ.", 13, "00 ტრლ.", 14, "000 ტრლ."]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 ათასი", 4, "00 ათასი", 5, "000 ათასი", 6, "0 მილიონი", 7, "00 მილიონი", 8, "000 მილიონი", 9, "0 მილიარდი", 10, "00 მილიარდი", 11, "000 მილიარდი", 12, "0 ტრილიონი", 13, "00 ტრილიონი", 14, "000 ტრილიონი"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 ათ. ¤", 4, "00 ათ. ¤", 5, "000 ათ. ¤", 6, "0 მლნ. ¤", 7, "00 მლნ. ¤", 8, "000 მლნ. ¤", 9, "0 მლრდ. ¤", 10, "00 მლრდ. ¤", 11, "000 მლრ. ¤", 12, "0 ტრლ. ¤", 13, "00 ტრლ. ¤", 14, "000 ტრლ. ¤"])}), "kk", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 мың", 4, "00 мың", 5, "000 м.", 6, "0 млн", 7, "00 млн", 8, "000 млн", 9, "0 млрд", 10, "00 млрд", 11, "000 млрд", 12, "0 трлн", 13, "00 трлн", 14, "000 трлн"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 мың", 4, "00 мың", 5, "000 мың", 6, "0 миллион", 7, "00 миллион", 8, "000 миллион", 9, "0 миллиард", 10, "00 миллиард", 11, "000 миллиард", 12, "0 триллион", 13, "00 триллион", 14, "000 триллион"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 мың ¤", 4, "00 мың ¤", 5, "000 мың ¤", 6, "0 млн ¤", 7, "00 млн ¤", 8, "000 млн ¤", 9, "0 млрд ¤", 10, "00 млрд ¤", 11, "000 млрд ¤", 12, "0 трлн ¤", 13, "00 трлн ¤", 14, "000 трлн ¤"])}), "km", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0ពាន់", 4, "0​មឺុន", 5, "0សែន", 6, "0លាន", 7, "0​ដប់​លាន", 8, "0​រយលាន", 9, "0​កោដិ", 10, "0​ដប់​កោដិ", 11, "0​រយ​កោដិ", 12, "0​ពាន់​កោដិ", 13, "0​មឺុន​កោដិ", 14, "0​សែន​កោដិ"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0ពាន់", 4, "0​មឺុន", 5, "0សែន", 6, "0លាន", 7, "0​ដប់​លាន", 8, "0​រយលាន", 9, "0​កោដិ", 10, "0​ដប់​កោដិ", 11, "0​រយ​កោដិ", 12, "0​ពាន់​កោដិ", 13, "0​មឺុន​កោដិ", 14, "0​សែន​កោដិ"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0ពាន់", 4, "¤00ពាន់", 5, "¤000ពាន់", 6, "¤0លាន", 7, "¤0​ដប់​លាន", 8, "¤0​រយលាន", 9, "¤0​កោដិ", 10, "¤0​ដប់​កោដិ", 11, "¤0​រយ​កោដិ", 12, "¤0​ពាន់​កោដិ", 13, "¤0​មឺុន​កោដិ", 14, "¤0​សែន​កោដិ"])}), "kn", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0ಸಾ", 4, "00ಸಾ", 5, "000ಸಾ", 6, "0ಮಿ", 7, "00ಮಿ", 8, "000ಮಿ", 9, "0ಬಿ", 10, "00ಬಿ", 11, "000ಬಿ", 12, "0ಟ್ರಿ", 13, "00ಟ್ರಿ", 14, "000ಟ್ರಿ"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 ಸಾವಿರ", 4, "00 ಸಾವಿರ", 5, "000 ಸಾವಿರ", 6, "0 ಮಿಲಿಯನ್", 7, "00 ಮಿಲಿಯನ್", 8, "000 ಮಿಲಿಯನ್", 9, "0 ಬಿಲಿಯನ್", 10, "00 ಬಿಲಿಯನ್", 11, "000 ಬಿಲಿಯನ್", 12, "0 ಟ್ರಿಲಿಯನ್‌", 13, "00 ಟ್ರಿಲಿಯನ್‌", 14, "000 ಟ್ರಿಲಿಯನ್‌"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0ಸಾ", 4, "¤00ಸಾ", 5, "¤000ಸಾ", 6, "¤0ಮಿ", 7, "¤00ಮಿ", 8, "¤000ಮಿ", 9, "¤0ಬಿ", 10, "¤00ಬಿ", 11, "¤000ಬಿ", 12, "¤0ಟ್ರಿ", 13, "¤00ಟ್ರಿ", 14, "¤000ಟ್ರಿ"])}), "ko", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0천", 4, "0만", 5, "00만", 6, "000만", 7, "0000만", 8, "0억", 9, "00억", 10, "000억", 11, "0000억", 12, "0조", 13, "00조", 14, "000조"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0천", 4, "0만", 5, "00만", 6, "000만", 7, "0000만", 8, "0억", 9, "00억", 10, "000억", 11, "0000억", 12, "0조", 13, "00조", 14, "000조"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0천", 4, "¤0만", 5, "¤00만", 6, "¤000만", 7, "¤0000만", 8, "¤0억", 9, "¤00억", 10, "¤000억", 11, "¤0000억", 12, "¤0조", 13, "¤00조", 14, "¤000조"])}), "ky", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 миӊ", 4, "00 миӊ", 5, "000 миӊ", 6, "0 млн", 7, "00 млн", 8, "000 млн", 9, "0 млд", 10, "00 млд", 11, "000 млд", 12, "0 трлн", 13, "00 трлн", 14, "000 трлн"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 миӊ", 4, "00 миӊ", 5, "000 миӊ", 6, "0 миллион", 7, "00 миллион", 8, "000 миллион", 9, "0 миллиард", 10, "00 миллиард", 11, "000 миллиард", 12, "0 триллион", 13, "00 триллион", 14, "000 триллион"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 миӊ ¤", 4, "00 миӊ ¤", 5, "000 миӊ ¤", 6, "0 млн ¤", 7, "00 млн ¤", 8, "000 млн ¤", 9, "0 млд ¤", 10, "00 млд ¤", 11, "000 млд ¤", 12, "0 трлн ¤", 13, "00 трлн ¤", 14, "000 трлн ¤"])}), "ln", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0K", 4, "00K", 5, "000K", 6, "0M", 7, "00M", 8, "000M", 9, "0G", 10, "00G", 11, "000G", 12, "0T", 13, "00T", 14, "000T"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0K ¤", 4, "00K ¤", 5, "000K ¤", 6, "0M ¤", 7, "00M ¤", 8, "000M ¤", 9, "0G ¤", 10, "00G ¤", 11, "000G ¤", 12, "0T ¤", 13, "00T ¤", 14, "000T ¤"])}), "lo", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 ພັນ", 4, "00 ພັນ", 5, "000 ກີບ", 6, "0 ລ້ານ", 7, "00 ລ້ານ", 8, "000 ລ້ານ", 9, "0 ຕື້", 10, "00 ຕື້", 11, "000 ຕື້", 12, "0 ລ້ານລ້ານ", 13, "00ລລ", 14, "000ລລ"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 ພັນ", 4, "00 ພັນ", 5, "0 ແສນ", 6, "0 ລ້ານ", 7, "00 ລ້ານ", 8, "000 ລ້ານ", 9, "0 ຕື້", 10, "00 ຕື້", 11, "000 ຕື້", 12, "0 ລ້ານລ້ານ", 13, "00 ລ້ານລ້ານ", 14, "000 ລ້ານລ້ານ"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0 ພັນ", 4, "¤00 ພັນ", 5, "¤000 ກີບ", 6, "¤0 ລ້ານ", 7, "¤00 ລ້ານ", 8, "¤000 ລ້ານ", 9, "¤0 ຕື້", 10, "¤00 ຕື້", 11, "¤000 ຕື້", 12, "¤0 ລ້ານລ້ານ", 13, "¤00 ລ້ານລ້ານ", 14, "¤000 ລ້ານລ້ານ"])}), "lt", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 tūkst.", 4, "00 tūkst.", 5, "000 tūkst.", 6, "0 mln.", 7, "00 mln.", 8, "000 mln.", 9, "0 mlrd.", 10, "00 mlrd.", 11, "000 mlrd.", 12, "0 trln.", 13, "00 trln.", 14, "000 trln."]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 tūkstančių", 4, "00 tūkstančių", 5, "000 tūkstančių", 6, "0 milijonų", 7, "00 milijonų", 8, "000 milijonų", 9, "0 milijardų", 10, "00 milijardų", 11, "000 milijardų", 12, "0 trilijonų", 13, "00 trilijonų", 14, "000 trilijonų"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 tūkst. ¤", 4, "00 tūkst. ¤", 5, "000 tūkst. ¤", 6, "0 mln. ¤", 7, "00 mln. ¤", 8, "000 mln. ¤", 9, "0 mlrd. ¤", 10, "00 mlrd. ¤", 11, "000 mlrd. ¤", 12, "0 trln. ¤", 13, "00 trln. ¤", 14, "000 trln. ¤"])}), "lv", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 tūkst.", 4, "00 tūkst.", 5, "000 tūkst.", 6, "0 milj.", 7, "00 milj.", 8, "000 milj.", 9, "0 mljrd.", 10, "00 mljrd.", 11, "000 mljrd.", 12, "0 trilj.", 13, "00 trilj.", 14, "000 trilj."]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 tūkstoši", 4, "00 tūkstoši", 5, "000 tūkstoši", 6, "0 miljoni", 7, "00 miljoni", 8, "000 miljoni", 9, "0 miljardi", 10, "00 miljardi", 11, "000 miljardi", 12, "0 triljoni", 13, "00 triljoni", 14, "000 triljoni"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 tūkst. ¤", 4, "00 tūkst. ¤", 5, "000 tūkst. ¤", 6, "0 milj. ¤", 7, "00 milj. ¤", 8, "000 milj. ¤", 9, "0 mljrd. ¤", 10, "¤00 mljrd.", 11, "¤000 mljrd.", 12, "¤0 trilj.", 13, "¤00 trilj.", 14, "¤000 trilj."])}), "mk", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 илј.", 4, "00 илј.", 5, "000 илј.", 6, "0 мил.", 7, "00 мил.", 8, "000 М", 9, "0 милј.", 10, "00 милј.", 11, "000 ми.", 12, "0 бил.", 13, "00 бил.", 14, "000 бил."]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 илјади", 4, "00 илјади", 5, "000 илјади", 6, "0 милиони", 7, "00 милиони", 8, "000 милиони", 9, "0 милијарди", 10, "00 милијарди", 11, "000 милијарди", 12, "0 билиони", 13, "00 билиони", 14, "000 билиони"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 илј. ¤ ", 4, "00 илј. ¤ ", 5, "000 илј. ¤ ", 6, "0 мил. ¤", 7, "00 мил. ¤", 8, "000 мил. ¤", 9, "0 милј. ¤", 10, "00 милј. ¤", 11, "000 милј. ¤", 12, "0 бил. ¤", 13, "00 бил. ¤", 14, "000 бил. ¤"])}), "ml", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0K", 4, "00K", 5, "000K", 6, "0M", 7, "00M", 8, "000M", 9, "0B", 10, "00B", 11, "000B", 12, "0T", 13, "00T", 14, "000T"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 ആയിരം", 4, "00 ആയിരം", 5, "000 ആയിരം", 6, "0 ദശലക്ഷം", 7, "00 ദശലക്ഷം", 8, "000 ദശലക്ഷം", 9, "0 ലക്ഷം കോടി", 10, "00 ലക്ഷം കോടി", 11, "000 ലക്ഷം കോടി", 12, "0 ട്രില്യൺ", 13, "00 ട്രില്യൺ", 14, "000 ട്രില്യൺ"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0K", 4, "¤00K", 5, "¤000K", 6, "¤0M", 7, "¤00M", 8, "¤000M", 9, "¤0B", 10, "¤00B", 11, "¤000B", 12, "¤0T", 13, "¤00T", 14, "¤000T"])}), "mn", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0мянга", 4, "00мянга", 5, "000мянга", 6, "0сая", 7, "00сая", 8, "000сая", 9, "0тэрбум", 10, "00тэрбум", 11, "000Т", 12, "0ИН", 13, "00ИН", 14, "000ИН"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 мянга", 4, "00 мянга", 5, "000 мянга", 6, "0 сая", 7, "00 сая", 8, "000 сая", 9, "0 тэрбум", 10, "00 тэрбум", 11, "000 тэрбум", 12, "0 их наяд", 13, "00 их наяд", 14, "000 их наяд"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤ 0 мянга", 4, "¤ 00 мянга", 5, "¤000 мянга", 6, "¤0 сая", 7, "¤00 сая", 8, "¤000 сая", 9, "¤0 тэрбум", 10, "¤ 00 тэрбум", 11, "¤ 000 тэрбум", 12, "¤ 0 их наяд", 13, "¤ 00 их наяд", 14, "¤ 000 их наяд"])}), "mr", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 ह", 4, "00 ह", 5, "0 लाख", 6, "00 लाख", 7, "0 कोटी", 8, "00 कोटी", 9, "0 अब्ज", 10, "00 अब्ज", 11, "0 खर्व", 12, "00 खर्व", 13, "0 पद्म", 14, "00 पद्म"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 हजार", 4, "00 हजार", 5, "0 लाख", 6, "00 लाख", 7, "0 कोटी", 8, "00 कोटी", 9, "0 अब्ज", 10, "00 अब्ज", 11, "0 खर्व", 12, "00 खर्व", 13, "0 पद्म", 14, "00 पद्म"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0 ह", 4, "¤00 ह", 5, "¤0 लाख", 6, "¤00 लाख", 7, "¤0 कोटी", 8, "¤00 कोटी", 9, "¤0 अब्ज", 10, "¤00 अब्ज", 11, "¤0 खर्व", 12, "¤00 खर्व", 13, "¤0 पद्म", 14, "¤00 पद्म"])}), "ms", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0K", 4, "00K", 5, "000K", 6, "0J", 7, "00J", 8, "000J", 9, "0B", 10, "00B", 11, "000B", 12, "0T", 13, "00T", 14, "000T"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 ribu", 4, "00 ribu", 5, "000 ribu", 6, "0 juta", 7, "00 juta", 8, "000 juta", 9, "0 bilion", 10, "00 bilion", 11, "000 bilion", 12, "0 trilion", 13, "00 trilion", 14, "000 trilion"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0K", 4, "¤00K", 5, "¤000K", 6, "¤0J", 7, "¤00J", 8, "¤000J", 9, "¤0B", 10, "¤00B", 11, "¤000B", 12, "¤0T", 13, "¤00T", 14, "¤000T"])}), "mt", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0K", 4, "00K", 5, "000K", 6, "0M", 7, "00M", 8, "000M", 9, "0G", 10, "00G", 11, "000G", 12, "0T", 13, "00T", 14, "000T"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0K", 4, "¤00K", 5, "¤000K", 6, "¤0M", 7, "¤00M", 8, "¤000M", 9, "¤0G", 10, "¤00G", 11, "¤000G", 12, "¤0T", 13, "¤00T", 14, "¤000T"])}), "my", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0ထောင်", 4, "0သောင်း", 5, "0သိန်း", 6, "0သန်း", 7, "0ကုဋေ", 8, "00ကုဋေ", 9, "ကုဋေ000", 10, "ကုဋေ0ထ", 11, "ကုဋေ0သ", 12, "ဋေ0သိန်း", 13, "ဋေ0သန်း", 14, "0ကောဋိ"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0ထောင်", 4, "0သောင်း", 5, "0သိန်း", 6, "0သန်း", 7, "0ကုဋေ", 8, "00ကုဋေ", 9, "ကုဋေ000", 10, "ကုဋေ0000", 11, "ကုဋေ0သောင်း", 12, "ကုဋေ0သိန်း", 13, "ကုဋေ0သန်း", 14, "0ကောဋိ"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤ 0ထောင်", 4, "¤ 0သောင်း", 5, "¤ 0သိန်း", 6, "¤ 0သန်း", 7, "¤ 0ကုဋေ", 8, "¤ 00ကုဋေ", 9, "¤ ကုဋေ000", 10, "¤ ကုဋေ0000", 11, "¤ ကုဋေ0သောင်း", 12, "¤ ကုဋေ0သိန်း", 13, "¤ ကုဋေ0သန်း", 14, "¤ 0ကောဋိ"])}), "nb", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0k", 4, "00k", 5, "000k", 6, "0 mill", 7, "00 mill", 8, "000 mill", 9, "0 mrd", 10, "00 mrd", 11, "000 mrd", 12, "0 bill", 13, "00 bill", 14, "000 bill"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 tusen", 4, "00 tusen", 5, "000 tusen", 6, "0 millioner", 7, "00 millioner", 8, "000 millioner", 9, "0 milliarder", 10, "00 milliarder", 11, "000 milliarder", 12, "0 billioner", 13, "00 billioner", 14, "000 billioner"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤ 0k", 4, "¤ 00k", 5, "¤ 000k", 6, "¤ 0 mill.", 7, "¤ 00 mill.", 8, "¤ 000 mill.", 9, "¤ 0 mrd.", 10, "¤ 00 mrd.", 11, "¤ 000 mrd.", 12, "¤ 0 bill.", 13, "¤ 00 bill.", 14, "¤ 000 bill."])}), "ne", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 हजार", 4, "00 हजार", 5, "0 लाख", 6, "00 लाख", 7, "0 करोड", 8, "00 करोड", 9, "0 अरब", 10, "00 अरब", 11, "0 खरब", 12, "00 खरब", 13, "0 शंख", 14, "00 शंख"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 हजार", 4, "00 हजार", 5, "0 लाख", 6, "0 करोड", 7, "00 करोड", 8, "000 करोड", 9, "0 अरब", 10, "00 अरब", 11, "000 अरब", 12, "00 खरब", 13, "0 शंख", 14, "00 शंख"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤ 0 हजार", 4, "¤ 00 हजार", 5, "¤ 0 लाख", 6, "¤ 00 लाख", 7, "¤ 0 करोड", 8, "¤ 00 करोड", 9, "¤ 0 अरब", 10, "¤ 00 अरब", 11, "¤ 0 खरब", 12, "¤ 00 खरब", 13, "¤ 0 शंख", 14, "¤ 00 शंख"])}), "nl", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0K", 4, "00K", 5, "000K", 6, "0 mln.", 7, "00 mln.", 8, "000 mln.", 9, "0 mld.", 10, "00 mld.", 11, "000 mld.", 12, "0 bln.", 13, "00 bln.", 14, "000 bln."]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 duizend", 4, "00 duizend", 5, "000 duizend", 6, "0 miljoen", 7, "00 miljoen", 8, "000 miljoen", 9, "0 miljard", 10, "00 miljard", 11, "000 miljard", 12, "0 biljoen", 13, "00 biljoen", 14, "000 biljoen"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤ 0K", 4, "¤ 00K", 5, "¤ 000K", 6, "¤ 0 mln.", 7, "¤ 00 mln.", 8, "¤ 000 mln.", 9, "¤ 0 mld.", 10, "¤ 00 mld.", 11, "¤ 000 mld.", 12, "¤ 0 bln.", 13, "¤ 00 bln.", 14, "¤ 000 bln."])}), "no", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0k", 4, "00k", 5, "000k", 6, "0 mill", 7, "00 mill", 8, "000 mill", 9, "0 mrd", 10, "00 mrd", 11, "000 mrd", 12, "0 bill", 13, "00 bill", 14, "000 bill"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 tusen", 4, "00 tusen", 5, "000 tusen", 6, "0 millioner", 7, "00 millioner", 8, "000 millioner", 9, "0 milliarder", 10, "00 milliarder", 11, "000 milliarder", 12, "0 billioner", 13, "00 billioner", 14, "000 billioner"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤ 0k", 4, "¤ 00k", 5, "¤ 000k", 6, "¤ 0 mill.", 7, "¤ 00 mill.", 8, "¤ 000 mill.", 9, "¤ 0 mrd.", 10, "¤ 00 mrd.", 11, "¤ 000 mrd.", 12, "¤ 0 bill.", 13, "¤ 00 bill.", 14, "¤ 000 bill."])}), "no_NO", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0k", 4, "00k", 5, "000k", 6, "0 mill", 7, "00 mill", 8, "000 mill", 9, "0 mrd", 10, "00 mrd", 11, "000 mrd", 12, "0 bill", 13, "00 bill", 14, "000 bill"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 tusen", 4, "00 tusen", 5, "000 tusen", 6, "0 millioner", 7, "00 millioner", 8, "000 millioner", 9, "0 milliarder", 10, "00 milliarder", 11, "000 milliarder", 12, "0 billioner", 13, "00 billioner", 14, "000 billioner"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤ 0k", 4, "¤ 00k", 5, "¤ 000k", 6, "¤ 0 mill.", 7, "¤ 00 mill.", 8, "¤ 000 mill.", 9, "¤ 0 mrd.", 10, "¤ 00 mrd.", 11, "¤ 000 mrd.", 12, "¤ 0 bill.", 13, "¤ 00 bill.", 14, "¤ 000 bill."])}), "or", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0ହ", 4, "00ହ", 5, "000ହ", 6, "0ନି", 7, "00ନି", 8, "000ନି", 9, "0ବି", 10, "00ବି", 11, "000ବି", 12, "0ଟ୍ରି", 13, "00ଟ୍ରି", 14, "000ଟ୍ରି"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 ହଜାର", 4, "00 ହଜାର", 5, "000 ହଜାର", 6, "0 ନିୟୁତ", 7, "00 ନିୟୁତ", 8, "000 ନିୟୁତ", 9, "0 ଶହକୋଟି", 10, "00 ଶହକୋଟି", 11, "000 ଶହକୋଟି", 12, "0 ଲକ୍ଷକୋଟି", 13, "00 ଲକ୍ଷକୋଟି", 14, "000 ଲକ୍ଷକୋଟି"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0ହ", 4, "¤00ହ", 5, "¤000ହ", 6, "¤0ନି", 7, "¤00ନି", 8, "¤000ନି", 9, "¤0ବି", 10, "¤00ବି", 11, "¤000ବି", 12, "¤0ଟ୍ରି", 13, "¤00ଟ୍ରି", 14, "¤000ଟ୍ରି"])}), "pa", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 ਹਜ਼ਾਰ", 4, "00 ਹਜ਼ਾਰ", 5, "0 ਲੱਖ", 6, "00 ਲੱਖ", 7, "0 ਕਰੋੜ", 8, "00 ਕਰੋੜ", 9, "0 ਅਰਬ", 10, "00 ਅਰਬ", 11, "0 ਖਰਬ", 12, "00 ਖਰਬ", 13, "0 ਨੀਲ", 14, "00 ਨੀਲ"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 ਹਜ਼ਾਰ", 4, "00 ਹਜ਼ਾਰ", 5, "0 ਲੱਖ", 6, "00 ਲੱਖ", 7, "0 ਕਰੋੜ", 8, "00 ਕਰੋੜ", 9, "0 ਅਰਬ", 10, "00 ਅਰਬ", 11, "0 ਖਰਬ", 12, "00 ਖਰਬ", 13, "0 ਨੀਲ", 14, "00 ਨੀਲ"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤ 0 ਹਜ਼ਾਰ", 4, "¤ 00 ਹਜ਼ਾਰ", 5, "¤ 0 ਲੱਖ", 6, "¤ 00 ਲੱਖ", 7, "¤ 0 ਕਰੋੜ", 8, "¤ 00 ਕਰੋੜ", 9, "¤ 0 ਅਰਬ", 10, "¤ 00 ਅਰਬ", 11, "¤ 0 ਖਰਬ", 12, "¤ 00 ਖਰਬ", 13, "¤ 0 ਨੀਲ", 14, "¤ 00 ਨੀਲ"])}), "pl", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 tys.", 4, "00 tys.", 5, "000 tys.", 6, "0 mln", 7, "00 mln", 8, "000 mln", 9, "0 mld", 10, "00 mld", 11, "000 mld", 12, "0 bln", 13, "00 bln", 14, "000 bln"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 tysiąca", 4, "00 tysiąca", 5, "000 tysiąca", 6, "0 miliona", 7, "00 miliona", 8, "000 miliona", 9, "0 miliarda", 10, "00 miliarda", 11, "000 miliarda", 12, "0 biliona", 13, "00 biliona", 14, "000 biliona"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 tys. ¤", 4, "00 tys. ¤", 5, "000 tys. ¤", 6, "0 mln ¤", 7, "00 mln ¤", 8, "000 mln ¤", 9, "0 mld ¤", 10, "00 mld ¤", 11, "000 mld ¤", 12, "0 bln ¤", 13, "00 bln ¤", 14, "000 bln ¤"])}), "ps", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0K", 4, "00K", 5, "000K", 6, "0M", 7, "00M", 8, "000M", 9, "0B", 10, "00B", 11, "000B", 12, "0T", 13, "00T", 14, "000T"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0K", 4, "00K", 5, "000K", 6, "0M", 7, "00M", 8, "000M", 9, "0G", 10, "00G", 11, "000G", 12, "0T", 13, "00T", 14, "000T"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0K ¤", 4, "00K ¤", 5, "000K ¤", 6, "0M ¤", 7, "00M ¤", 8, "000M ¤", 9, "0G ¤", 10, "00G ¤", 11, "000G ¤", 12, "0T ¤", 13, "00T ¤", 14, "000T ¤"])}), "pt", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 mil", 4, "00 mil", 5, "000 mil", 6, "0 mi", 7, "00 mi", 8, "000 mi", 9, "0 bi", 10, "00 bi", 11, "000 bi", 12, "0 tri", 13, "00 tri", 14, "000 tri"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 mil", 4, "00 mil", 5, "000 mil", 6, "0 milhões", 7, "00 milhões", 8, "000 milhões", 9, "0 bilhões", 10, "00 bilhões", 11, "000 bilhões", 12, "0 trilhões", 13, "00 trilhões", 14, "000 trilhões"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0 mil", 4, "¤00 mil", 5, "¤000 mil", 6, "¤0 mi", 7, "¤00 mi", 8, "¤000 mi", 9, "¤0 bi", 10, "¤00 bi", 11, "¤000 bi", 12, "¤0 tri", 13, "¤00 tri", 14, "¤000 tri"])}), "pt_BR", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 mil", 4, "00 mil", 5, "000 mil", 6, "0 mi", 7, "00 mi", 8, "000 mi", 9, "0 bi", 10, "00 bi", 11, "000 bi", 12, "0 tri", 13, "00 tri", 14, "000 tri"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 mil", 4, "00 mil", 5, "000 mil", 6, "0 milhões", 7, "00 milhões", 8, "000 milhões", 9, "0 bilhões", 10, "00 bilhões", 11, "000 bilhões", 12, "0 trilhões", 13, "00 trilhões", 14, "000 trilhões"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0 mil", 4, "¤00 mil", 5, "¤000 mil", 6, "¤0 mi", 7, "¤00 mi", 8, "¤000 mi", 9, "¤0 bi", 10, "¤00 bi", 11, "¤000 bi", 12, "¤0 tri", 13, "¤00 tri", 14, "¤000 tri"])}), "pt_PT", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 mil", 4, "00 mil", 5, "000 mil", 6, "0 M", 7, "00 M", 8, "000 M", 9, "0 mM", 10, "00 mM", 11, "000 mM", 12, "0 Bi", 13, "00 Bi", 14, "000 Bi"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 mil", 4, "00 mil", 5, "000 mil", 6, "0 milhões", 7, "00 milhões", 8, "000 milhões", 9, "0 mil milhões", 10, "00 mil milhões", 11, "000 mil milhões", 12, "0 biliões", 13, "00 biliões", 14, "000 biliões"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0 mil", 4, "¤00 mil", 5, "¤000 mil", 6, "¤0 M", 7, "¤00 M", 8, "¤000 M", 9, "¤0 mM", 10, "¤00 mM", 11, "¤000 mM", 12, "¤0 B", 13, "¤00 B", 14, "¤000 B"])}), "ro", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 K", 4, "00 K", 5, "000 K", 6, "0 mil.", 7, "00 mil.", 8, "000 mil.", 9, "0 mld.", 10, "00 mld.", 11, "000 mld.", 12, "0 tril.", 13, "00 tril.", 14, "000 tril."]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 de mii", 4, "00 de mii", 5, "000 de mii", 6, "0 de milioane", 7, "00 de milioane", 8, "000 de milioane", 9, "0 de miliarde", 10, "00 de miliarde", 11, "000 de miliarde", 12, "0 de trilioane", 13, "00 de trilioane", 14, "000 de trilioane"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 mii ¤", 4, "00 mii ¤", 5, "000 mii ¤", 6, "0 mil. ¤", 7, "00 mil. ¤", 8, "000 mil. ¤", 9, "0 mld. ¤", 10, "00 mld. ¤", 11, "000 mld. ¤", 12, "0 tril. ¤", 13, "00 tril. ¤", 14, "000 tril. ¤"])}), "ru", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 тыс.", 4, "00 тыс.", 5, "000 тыс.", 6, "0 млн", 7, "00 млн", 8, "000 млн", 9, "0 млрд", 10, "00 млрд", 11, "000 млрд", 12, "0 трлн", 13, "00 трлн", 14, "000 трлн"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 тысячи", 4, "00 тысячи", 5, "000 тысячи", 6, "0 миллиона", 7, "00 миллиона", 8, "000 миллиона", 9, "0 миллиарда", 10, "00 миллиарда", 11, "000 миллиарда", 12, "0 триллиона", 13, "00 триллиона", 14, "000 триллиона"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 тыс. ¤", 4, "00 тыс. ¤", 5, "000 тыс. ¤", 6, "0 млн ¤", 7, "00 млн ¤", 8, "000 млн ¤", 9, "0 млрд ¤", 10, "00 млрд ¤", 11, "000 млрд ¤", 12, "0 трлн ¤", 13, "00 трлн ¤", 14, "000 трлн ¤"])}), "si", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "ද0", 4, "ද00", 5, "ද000", 6, "මි0", 7, "මි00", 8, "මි000", 9, "බි0", 10, "බි00", 11, "බි000", 12, "ට්‍රි0", 13, "ට්‍රි00", 14, "ට්‍රි000"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "දහස 0", 4, "දහස 00", 5, "දහස 000", 6, "මිලියන 0", 7, "මිලියන 00", 8, "මිලියන 000", 9, "බිලියන 0", 10, "බිලියන 00", 11, "බිලියන 000", 12, "ට්‍රිලියන 0", 13, "ට්‍රිලියන 00", 14, "ට්‍රිලියන 000"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤ද0", 4, "¤ද00", 5, "¤ද000", 6, "¤මි0", 7, "¤මි00", 8, "¤මි000", 9, "¤බි0", 10, "¤බි00", 11, "¤බි000", 12, "¤ට්‍රි0", 13, "¤ට්‍රි00", 14, "¤ට්‍රි000"])}), "sk", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 tis.", 4, "00 tis.", 5, "000 tis.", 6, "0 mil.", 7, "00 mil.", 8, "000 mil.", 9, "0 mld.", 10, "00 mld.", 11, "000 mld.", 12, "0 bil.", 13, "00 bil.", 14, "000 bil."]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 tisíc", 4, "00 tisíc", 5, "000 tisíc", 6, "0 miliónov", 7, "00 miliónov", 8, "000 miliónov", 9, "0 miliárd", 10, "00 miliárd", 11, "000 miliárd", 12, "0 biliónov", 13, "00 biliónov", 14, "000 biliónov"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 tis. ¤", 4, "00 tis. ¤", 5, "000 tis. ¤", 6, "0 mil. ¤", 7, "00 mil. ¤", 8, "000 mil. ¤", 9, "0 mld. ¤", 10, "00 mld. ¤", 11, "000 mld. ¤", 12, "0 bil. ¤", 13, "00 bil. ¤", 14, "000 bil. ¤"])}), "sl", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 tis.", 4, "00 tis.", 5, "000 tis.", 6, "0 mio.", 7, "00 mio.", 8, "000 mio.", 9, "0 mrd.", 10, "00 mrd.", 11, "000 mrd.", 12, "0 bil.", 13, "00 bil.", 14, "000 bil."]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 tisoč", 4, "00 tisoč", 5, "000 tisoč", 6, "0 milijonov", 7, "00 milijonov", 8, "000 milijonov", 9, "0 milijard", 10, "00 milijard", 11, "000 milijard", 12, "0 bilijonov", 13, "00 bilijonov", 14, "000 bilijonov"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 tis. ¤", 4, "00 tis. ¤", 5, "000 tis. ¤", 6, "0 mio. ¤", 7, "00 mio. ¤", 8, "000 mio. ¤", 9, "0 mrd. ¤", 10, "00 mrd. ¤", 11, "000 mrd. ¤", 12, "0 bil. ¤", 13, "00 bil. ¤", 14, "000 bil. ¤"])}), "sq", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 mijë", 4, "00 mijë", 5, "000 mijë", 6, "0 mln", 7, "00 mln", 8, "000 mln", 9, "0 mld", 10, "00 mld", 11, "000 mld", 12, "0 bln", 13, "00 bln", 14, "000 bln"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 mijë", 4, "00 mijë", 5, "000 mijë", 6, "0 milion", 7, "00 milion", 8, "000 milion", 9, "0 miliard", 10, "00 miliard", 11, "000 miliard", 12, "0 bilion", 13, "00 bilion", 14, "000 bilion"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 mijë ¤", 4, "00 mijë ¤", 5, "000 mijë ¤", 6, "0 mln ¤", 7, "00 mln ¤", 8, "000 mln ¤", 9, "0 mld ¤", 10, "00 mld ¤", 11, "000 mld ¤", 12, "0 bln ¤", 13, "00 bln ¤", 14, "000 bln ¤"])}), "sr", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 хиљ.", 4, "00 хиљ.", 5, "000 хиљ.", 6, "0 мил.", 7, "00 мил.", 8, "000 мил.", 9, "0 млрд.", 10, "00 млрд.", 11, "000 млрд.", 12, "0 бил.", 13, "00 бил.", 14, "000 бил."]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 хиљада", 4, "00 хиљада", 5, "000 хиљада", 6, "0 милиона", 7, "00 милиона", 8, "000 милиона", 9, "0 милијарди", 10, "00 милијарди", 11, "000 милијарди", 12, "0 билиона", 13, "00 билиона", 14, "000 билиона"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 хиљ. ¤", 4, "00 хиљ. ¤", 5, "000 хиљ. ¤", 6, "0 мил. ¤", 7, "00 мил. ¤", 8, "000 мил. ¤", 9, "0 млрд. ¤", 10, "00 млрд. ¤", 11, "000 млрд. ¤", 12, "0 бил. ¤", 13, "00 бил. ¤", 14, "000 бил. ¤"])}), "sr_Latn", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 hilj.", 4, "00 hilj.", 5, "000 hilj.", 6, "0 mil.", 7, "00 mil.", 8, "000 mil.", 9, "0 mlrd.", 10, "00 mlrd.", 11, "000 mlrd.", 12, "0 bil.", 13, "00 bil.", 14, "000 bil."]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 hiljada", 4, "00 hiljada", 5, "000 hiljada", 6, "0 miliona", 7, "00 miliona", 8, "000 miliona", 9, "0 milijardi", 10, "00 milijardi", 11, "000 milijardi", 12, "0 biliona", 13, "00 biliona", 14, "000 biliona"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 hilj. ¤", 4, "00 hilj. ¤", 5, "000 hilj. ¤", 6, "0 mil. ¤", 7, "00 mil. ¤", 8, "000 mil. ¤", 9, "0 mlrd. ¤", 10, "00 mlrd. ¤", 11, "000 mlrd. ¤", 12, "0 bil. ¤", 13, "00 bil. ¤", 14, "000 bil. ¤"])}), "sv", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 tn", 4, "00 tn", 5, "000 tn", 6, "0 mn", 7, "00 mn", 8, "000 mn", 9, "0 md", 10, "00 md", 11, "000 md", 12, "0 bn", 13, "00 bn", 14, "000 bn"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 tusen", 4, "00 tusen", 5, "000 tusen", 6, "0 miljoner", 7, "00 miljoner", 8, "000 miljoner", 9, "0 miljarder", 10, "00 miljarder", 11, "000 miljarder", 12, "0 biljoner", 13, "00 biljoner", 14, "000 biljoner"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 tn ¤", 4, "00 tn ¤", 5, "000 tn ¤", 6, "0 mn ¤", 7, "00 mn ¤", 8, "000 mn ¤", 9, "0 md ¤", 10, "00 md ¤", 11, "000 md ¤", 12, "0 bn ¤", 13, "00 bn ¤", 14, "000 bn ¤"])}), "sw", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "elfu 0;elfu -0", 4, "elfu 00;elfu -00", 5, "elfu 000;elfu -000", 6, "M0;M-0", 7, "M00;M-00", 8, "M000;M-000", 9, "B0;B-0", 10, "B00;B-00", 11, "B000;B-000", 12, "T0;T-0", 13, "T00;T-00", 14, "T000;T-000"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "elfu 0;elfu -0", 4, "elfu 00;elfu -00", 5, "elfu 000;elfu -000", 6, "milioni 0;milioni -0", 7, "milioni 00;milioni -00", 8, "milioni 000;milioni -000", 9, "bilioni 0;bilioni -0", 10, "bilioni 00;bilioni -00", 11, "bilioni 000;bilioni -000", 12, "trilioni 0;trilioni -0", 13, "trilioni 00;trilioni -00", 14, "trilioni 000;trilioni -000"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤elfu 0;¤elfu -0", 4, "¤elfu 00;¤elfu -00", 5, "¤laki 000;¤laki -000", 6, "¤M0;¤M-0", 7, "¤M00;¤M-00", 8, "¤M000;¤M-000", 9, "¤B0;¤B-0", 10, "¤B00;¤B-00", 11, "¤B000;¤B-000", 12, "¤T0;¤T-0", 13, "¤T00;¤T-00", 14, "¤T000;¤T-000"])}), "ta", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0ஆ", 4, "00ஆ", 5, "000ஆ", 6, "0மி", 7, "00மி", 8, "000மி", 9, "0பி", 10, "00பி", 11, "000பி", 12, "0டி", 13, "00டி", 14, "000டி"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 ஆயிரம்", 4, "00 ஆயிரம்", 5, "000 ஆயிரம்", 6, "0 மில்லியன்", 7, "00 மில்லியன்", 8, "000 மில்லியன்", 9, "0 பில்லியன்", 10, "00 பில்லியன்", 11, "000 பில்லியன்", 12, "0 டிரில்லியன்", 13, "00 டிரில்லியன்", 14, "000 டிரில்லியன்"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤ 0ஆ", 4, "¤ 00ஆ", 5, "¤ 000ஆ", 6, "¤ 0மி", 7, "¤ 00மி", 8, "¤ 000மி", 9, "¤0பி", 10, "¤ 00பி", 11, "¤000பி", 12, "¤ 0டி", 13, "¤ 00டி", 14, "¤ 000டி"])}), "te", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0వే", 4, "00వే", 5, "000వే", 6, "0మి", 7, "00మి", 8, "000మి", 9, "0బి", 10, "00బి", 11, "000బి", 12, "0ట్రి", 13, "00ట్రి", 14, "000ట్రి"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 వేలు", 4, "00 వేలు", 5, "000 వేలు", 6, "0 మిలియన్లు", 7, "00 మిలియన్లు", 8, "000 మిలియన్లు", 9, "0 బిలియన్లు", 10, "00 బిలియన్లు", 11, "000 బిలియన్లు", 12, "0 ట్రిలియన్లు", 13, "00 ట్రిలియన్లు", 14, "000 ట్రిలియన్లు"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0వే", 4, "¤00వే", 5, "¤000వే", 6, "¤0మి", 7, "¤00మి", 8, "¤000మి", 9, "¤0బి", 10, "¤00బి", 11, "¤000బి", 12, "¤0ట్రి", 13, "¤00ట్రి", 14, "¤000ట్రి"])}), "th", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0K", 4, "00K", 5, "000K", 6, "0M", 7, "00M", 8, "000M", 9, "0B", 10, "00B", 11, "000B", 12, "0T", 13, "00T", 14, "000T"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 พัน", 4, "0 หมื่น", 5, "0 แสน", 6, "0 ล้าน", 7, "00 ล้าน", 8, "000 ล้าน", 9, "0 พันล้าน", 10, "0 หมื่นล้าน", 11, "0 แสนล้าน", 12, "0 ล้านล้าน", 13, "00 ล้านล้าน", 14, "000 ล้านล้าน"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0K", 4, "¤00K", 5, "¤000K", 6, "¤0M", 7, "¤00M", 8, "¤000M", 9, "¤0B", 10, "¤00B", 11, "¤000B", 12, "¤0T", 13, "¤00T", 14, "¤000T"])}), "tl", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0K", 4, "00K", 5, "000K", 6, "0M", 7, "00M", 8, "000M", 9, "0B", 10, "00B", 11, "000B", 12, "0T", 13, "00T", 14, "000T"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 na libo", 4, "00 na libo", 5, "000 na libo", 6, "0 na milyon", 7, "00 na milyon", 8, "000 na milyon", 9, "0 na bilyon", 10, "00 na bilyon", 11, "000 na bilyon", 12, "0 na trilyon", 13, "00 na trilyon", 14, "000 na trilyon"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0K", 4, "¤00K", 5, "¤000K", 6, "¤0M", 7, "¤00M", 8, "¤000M", 9, "¤0B", 10, "¤00B", 11, "¤000B", 12, "¤0T", 13, "¤00T", 14, "¤000T"])}), "tr", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 B", 4, "00 B", 5, "000 B", 6, "0 Mn", 7, "00 Mn", 8, "000 Mn", 9, "0 Mr", 10, "00 Mr", 11, "000 Mr", 12, "0 Tn", 13, "00 Tn", 14, "000 Tn"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 bin", 4, "00 bin", 5, "000 bin", 6, "0 milyon", 7, "00 milyon", 8, "000 milyon", 9, "0 milyar", 10, "00 milyar", 11, "000 milyar", 12, "0 trilyon", 13, "00 trilyon", 14, "000 trilyon"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 B ¤", 4, "00 B ¤", 5, "000 B ¤", 6, "0 Mn ¤", 7, "00 Mn ¤", 8, "000 Mn ¤", 9, "0 Mr ¤", 10, "00 Mr ¤", 11, "000 Mr ¤", 12, "0 Tn ¤", 13, "00 Tn ¤", 14, "000 Tn ¤"])}), "uk", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 тис.", 4, "00 тис.", 5, "000 тис.", 6, "0 млн", 7, "00 млн", 8, "000 млн", 9, "0 млрд", 10, "00 млрд", 11, "000 млрд", 12, "0 трлн", 13, "00 трлн", 14, "000 трлн"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 тисячі", 4, "00 тисячі", 5, "000 тисячі", 6, "0 мільйона", 7, "00 мільйона", 8, "000 мільйона", 9, "0 мільярда", 10, "00 мільярда", 11, "000 мільярда", 12, "0 трильйона", 13, "00 трильйона", 14, "000 трильйона"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 тис. ¤", 4, "00 тис. ¤", 5, "000 тис. ¤", 6, "0 млн ¤", 7, "00 млн ¤", 8, "000 млн ¤", 9, "0 млрд ¤", 10, "00 млрд ¤", 11, "000 млрд ¤", 12, "0 трлн ¤", 13, "00 трлн ¤", 14, "000 трлн ¤"])}), "ur", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 ہزار", 4, "00 ہزار", 5, "0 لاکھ", 6, "00 لاکھ", 7, "0 کروڑ", 8, "00 کروڑ", 9, "0 ارب", 10, "00 ارب", 11, "0 کھرب", 12, "00 کھرب", 13, "00 ٹریلین", 14, "000 ٹریلین"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 ہزار", 4, "00 ہزار", 5, "0 لاکھ", 6, "00 لاکھ", 7, "0 کروڑ", 8, "00 کروڑ", 9, "0 ارب", 10, "00 ارب", 11, "0 کھرب", 12, "00 کھرب", 13, "00 ٹریلین", 14, "000 ٹریلین"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤ 0 ہزار", 4, "¤ 00 ہزار", 5, "¤ 0 لاکھ", 6, "¤ 00 لاکھ", 7, "¤ 0 کروڑ", 8, "¤ 00 کروڑ", 9, "¤ 0 ارب", 10, "¤ 00 ارب", 11, "¤ 0 کھرب", 12, "¤0 ٹریلین", 13, "¤ 00 ٹریلین", 14, "¤ 000 ٹریلین"])}), "uz", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 ming", 4, "00 ming", 5, "000 ming", 6, "0 mln", 7, "00 mln", 8, "000 mln", 9, "0 mlrd", 10, "00 mlrd", 11, "000 mlrd", 12, "0 trln", 13, "00 trln", 14, "000 trln"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 ming", 4, "00 ming", 5, "000 ming", 6, "0 million", 7, "00 million", 8, "000 million", 9, "0 milliard", 10, "00 milliard", 11, "000 milliard", 12, "0 trillion", 13, "00 trillion", 14, "000 trillion"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 ming ¤", 4, "00 ming ¤", 5, "000 ming ¤", 6, "0 mln ¤", 7, "00 mln ¤", 8, "000 mln ¤", 9, "0 mlrd ¤", 10, "00 mlrd ¤", 11, "000 mlrd ¤", 12, "0 trln ¤", 13, "00 trln ¤", 14, "000 trln ¤"])}), "vi", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0 N", 4, "00 N", 5, "000 N", 6, "0 Tr", 7, "00 Tr", 8, "000 Tr", 9, "0 T", 10, "00 T", 11, "000 T", 12, "0 NT", 13, "00 NT", 14, "000 NT"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 nghìn", 4, "00 nghìn", 5, "000 nghìn", 6, "0 triệu", 7, "00 triệu", 8, "000 triệu", 9, "0 tỷ", 10, "00 tỷ", 11, "000 tỷ", 12, "0 nghìn tỷ", 13, "00 nghìn tỷ", 14, "000 nghìn tỷ"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0 N ¤", 4, "00 N ¤", 5, "000 N ¤", 6, "0 Tr ¤", 7, "00 Tr ¤", 8, "000 Tr ¤", 9, "0 T ¤", 10, "00 T ¤", 11, "000 T ¤", 12, "0 NT ¤", 13, "00 NT ¤", 14, "000 NT ¤"])}), "zh", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0", 4, "0万", 5, "00万", 6, "000万", 7, "0000万", 8, "0亿", 9, "00亿", 10, "000亿", 11, "0000亿", 12, "0兆", 13, "00兆", 14, "000兆"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0", 4, "0万", 5, "00万", 6, "000万", 7, "0000万", 8, "0亿", 9, "00亿", 10, "000亿", 11, "0000亿", 12, "0兆", 13, "00兆", 14, "000兆"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0", 4, "¤0万", 5, "¤00万", 6, "¤000万", 7, "¤0000万", 8, "¤0亿", 9, "¤00亿", 10, "¤000亿", 11, "¤0000亿", 12, "¤0兆", 13, "¤00兆", 14, "¤000兆"])}), "zh_CN", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0", 4, "0万", 5, "00万", 6, "000万", 7, "0000万", 8, "0亿", 9, "00亿", 10, "000亿", 11, "0000亿", 12, "0兆", 13, "00兆", 14, "000兆"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0", 4, "0万", 5, "00万", 6, "000万", 7, "0000万", 8, "0亿", 9, "00亿", 10, "000亿", 11, "0000亿", 12, "0兆", 13, "00兆", 14, "000兆"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0", 4, "¤0万", 5, "¤00万", 6, "¤000万", 7, "¤0000万", 8, "¤0亿", 9, "¤00亿", 10, "¤000亿", 11, "¤0000亿", 12, "¤0兆", 13, "¤00兆", 14, "¤000兆"])}), "zh_HK", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0K", 4, "00K", 5, "000K", 6, "0M", 7, "00M", 8, "000M", 9, "0B", 10, "00B", 11, "000B", 12, "0T", 13, "00T", 14, "000T"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0", 4, "0萬", 5, "00萬", 6, "000萬", 7, "0000萬", 8, "0億", 9, "00億", 10, "000億", 11, "0000億", 12, "0兆", 13, "00兆", 14, "000兆"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0K", 4, "¤00K", 5, "¤000K", 6, "¤0M", 7, "¤00M", 8, "¤000M", 9, "¤0B", 10, "¤00B", 11, "¤000B", 12, "¤0T", 13, "¤00T", 14, "¤000T"])}), "zh_TW", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0", 4, "0萬", 5, "00萬", 6, "000萬", 7, "0000萬", 8, "0億", 9, "00億", 10, "000億", 11, "0000億", 12, "0兆", 13, "00兆", 14, "000兆"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0", 4, "0萬", 5, "00萬", 6, "000萬", 7, "0000萬", 8, "0億", 9, "00億", 10, "000億", 11, "0000億", 12, "0兆", 13, "00兆", 14, "000兆"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "0", 4, "¤0萬", 5, "¤00萬", 6, "¤000萬", 7, "¤0000萬", 8, "¤0億", 9, "¤00億", 10, "¤000億", 11, "¤0000億", 12, "¤0兆", 13, "¤00兆", 14, "¤000兆"])}), "zu", new number_symbols$.CompactNumberSymbols.new({COMPACT_DECIMAL_SHORT_PATTERN: dart.constMap(core.int, core.String, [3, "0K", 4, "00K", 5, "000K", 6, "0M", 7, "00M", 8, "000M", 9, "0B", 10, "00B", 11, "000B", 12, "0T", 13, "00T", 14, "000T"]), COMPACT_DECIMAL_LONG_PATTERN: dart.constMap(core.int, core.String, [3, "0 inkulungwane", 4, "00 inkulungwane", 5, "000 inkulungwane", 6, "0 isigidi", 7, "00 isigidi", 8, "000 isigidi", 9, "0 isigidi sezigidi", 10, "00 isigidi sezigidi", 11, "000 isigidi sezigidi", 12, "0 isigidintathu", 13, "00 isigidintathu", 14, "000 isigidintathu"]), COMPACT_DECIMAL_SHORT_CURRENCY_PATTERN: dart.constMap(core.int, core.String, [3, "¤0K", 4, "¤00K", 5, "¤000K", 6, "¤ 0M", 7, "¤ 00M", 8, "¤000M", 9, "¤0B", 10, "¤00B", 11, "¤000B", 12, "¤0T", 13, "¤00T", 14, "¤000T"])})]);
    },
    set compactNumberSymbols(_) {},
    /*number_symbols_data.currencyFractionDigits*/get currencyFractionDigits() {
      return new (IdentityMapOfString$int()).from(["ADP", 0, "AFN", 0, "ALL", 0, "AMD", 0, "BHD", 3, "BIF", 0, "BYN", 2, "BYR", 0, "CAD", 2, "CHF", 2, "CLF", 4, "CLP", 0, "COP", 0, "CRC", 2, "CZK", 2, "DEFAULT", 2, "DJF", 0, "DKK", 2, "ESP", 0, "GNF", 0, "GYD", 0, "HUF", 2, "IDR", 0, "IQD", 0, "IRR", 0, "ISK", 0, "ITL", 0, "JOD", 3, "JPY", 0, "KMF", 0, "KPW", 0, "KRW", 0, "KWD", 3, "LAK", 0, "LBP", 0, "LUF", 0, "LYD", 3, "MGA", 0, "MGF", 0, "MMK", 0, "MNT", 0, "MRO", 0, "MUR", 0, "NOK", 2, "OMR", 3, "PKR", 0, "PYG", 0, "RSD", 0, "RWF", 0, "SEK", 2, "SLL", 0, "SOS", 0, "STD", 0, "SYP", 0, "TMM", 0, "TND", 3, "TRL", 0, "TWD", 2, "TZS", 0, "UGX", 0, "UYI", 0, "UZS", 0, "VND", 0, "VUV", 0, "XAF", 0, "XOF", 0, "XPF", 0, "YER", 0, "ZMK", 0, "ZWD", 0]);
    }
  });
  dart.trackLibraries("packages/intl/number_symbols_data.ddc", {
    "package:intl/number_symbols_data.dart": number_symbols_data
  }, '{"version":3,"sourceRoot":"","sources":["number_symbols_data.dart"],"names":[],"mappings":";;;;;;;;;;;;;MAoBI,uCAAmB;YAAG,iDAExB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,mBACG,gBACD,kBACC,kBACA,cACH,eACC,UACL,8BACY,iCACG,wBACH,4BACC,iCACC,SAEvB,SAAS,IAAI,iCAAa,QAChB,sBACO,gBACF,cACF,mBACG,gBACD,kBACC,kBACA,cACH,eACC,UACL,8BACY,iCACG,wBACH,4BACC,iCACC,SAEvB,SAAS,IAAI,iCAAa,QAChB,sBACO,gBACF,cACF,kBACG,gBACD,kBACC,kBACA,eACH,eACC,UACL,4BACY,iCACG,wBACH,4BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,6BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,6BACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,oCACG,wBACH,4BACC,mCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,6BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,6BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,iCACC,SAEvB,OAAO,IAAI,iCAAa,QACd,oBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,6BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,6BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,6BACC,iCACC,SAEvB,SAAS,IAAI,iCAAa,QAChB,sBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,6BACC,iCACC,SAEvB,SAAS,IAAI,iCAAa,QAChB,sBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,4CACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,SAAS,IAAI,iCAAa,QAChB,sBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,SAAS,IAAI,iCAAa,QAChB,sBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,SAAS,IAAI,iCAAa,QAChB,sBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,SAAS,IAAI,iCAAa,QAChB,sBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,SAAS,IAAI,iCAAa,QAChB,sBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,oCACG,wBACH,+BACC,oCACC,SAEvB,SAAS,IAAI,iCAAa,QAChB,sBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,SAAS,IAAI,iCAAa,QAChB,sBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,SAAS,IAAI,iCAAa,QAChB,sBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,SAAS,IAAI,iCAAa,QAChB,sBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,6BACC,iCACC,SAEvB,UAAU,IAAI,iCAAa,QACjB,uBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,6BACC,gCACC,SAEvB,SAAS,IAAI,iCAAa,QAChB,sBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,6BACC,iCACC,SAEvB,SAAS,IAAI,iCAAa,QAChB,sBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,6BACC,gCACC,SAEvB,SAAS,IAAI,iCAAa,QAChB,sBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,6BACC,gCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,iBACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,6BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,kBACC,kBACA,iBACH,eACC,UACL,0BACY,iCACG,wBACH,4BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,4BACY,iCACG,wBACH,6BACC,iCACC,SAEvB,OAAO,IAAI,iCAAa,QACd,oBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,6BACC,iCACC,SAEvB,SAAS,IAAI,iCAAa,QAChB,sBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,6BACC,iCACC,SAEvB,SAAS,IAAI,iCAAa,QAChB,sBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,6CACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,6BACC,iCACC,SAEvB,OAAO,IAAI,iCAAa,QACd,oBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,6BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,oCACG,0BACH,+BACC,mCACC,SAEvB,OAAO,IAAI,iCAAa,QACd,oBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,kBACC,kBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BAEb,+CACe,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,oCACG,0BACH,+BACC,mCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,iCACC,SAEvB,SAAS,IAAI,iCAAa,QAChB,sBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,4CACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,kBACC,kBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BAEb,+CACe,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UAEN,mCACa,iCACG,wBACH,4BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,6BACY,iCACG,wBACH,4BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,6BACY,iCACG,wBACH,4BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UAEN,oCACa,iCACG,sBACH,4BACC,2CACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,iBACH,eACC,UACL,wBACY,iCACG,wBACH,6BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,uBACY,iCACG,wBACH,4BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,oCACG,wBACH,4BACC,gCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,oCACG,0BACH,4BACC,gCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UAEN,kCACa,iCACG,wBACH,4BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,6BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,6CACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,6BACC,iCACC,SAEvB,SAAS,IAAI,iCAAa,QAChB,sBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,6BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,oCACG,wBACH,+BACC,oCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,oCACG,0BACH,+BACC,oCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,mBACC,mBACA,iBACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,iCACC,SAEvB,SAAS,IAAI,iCAAa,QAChB,sBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,iCACC,SAEvB,SAAS,IAAI,iCAAa,QAChB,sBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,6BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,6BACY,iCACG,wBACH,6BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,sBACH,4BACC,gCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,6BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,6BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,iCACC,SAEvB,WAAW,IAAI,iCAAa,QAClB,wBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,iBACH,eACC,UACL,wBACY,iCACG,wBACH,6BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,oCACG,wBACH,+BACC,oCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,oCACG,wBACH,4BACC,mCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,kBACC,kBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,6BACY,iCACG,wBACH,4BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,iCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,SAAS,IAAI,iCAAa,QAChB,sBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,SAAS,IAAI,iCAAa,QAChB,sBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,SAAS,IAAI,iCAAa,QAChB,sBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC,SAEvB,MAAM,IAAI,iCAAa,QACb,mBACO,gBACF,cACF,iBACG,gBACD,iBACC,iBACA,cACH,eACC,UACL,wBACY,iCACG,wBACH,4BACC,gCACC;;;MAGS,wCAAoB;YAAG,wDAEvD,MAAM,IAAI,wCAAoB,iCAAgC,sCAC5D,GAAG,OACH,GAAG,QACH,GAAG,SACH,GAAG,OACH,GAAG,QACH,GAAG,SACH,GAAG,SACH,IAAI,UACJ,IAAI,WACJ,IAAI,QACJ,IAAI,SACJ,IAAI,0CAC2B,sCAC/B,GAAG,aACH,GAAG,cACH,GAAG,eACH,GAAG,aACH,GAAG,cACH,GAAG,eACH,GAAG,aACH,IAAI,cACJ,IAAI,eACJ,IAAI,aACJ,IAAI,cACJ,IAAI,yDACqC,sCACzC,GAAG,QACH,GAAG,SACH,GAAG,UACH,GAAG,QACH,GAAG,SACH,GA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":"number_symbols_data.ddc.js"}');
  // Exports:
  return {
    number_symbols_data: number_symbols_data
  };
});

//# sourceMappingURL=number_symbols_data.ddc.js.map
